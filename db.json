{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/hexo-theme-next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon32.ico","path":"images/favicon32.ico","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon16.ico","path":"images/favicon16.ico","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/max.jpg","path":"images/max.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/wxavatar.jpg","path":"images/wxavatar.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"fd33f36ca680caa76ab9f9d9c146834b731cf8e2","modified":1515401437823},{"_id":"themes/hexo-theme-next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1515401437825},{"_id":"themes/hexo-theme-next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1515401437825},{"_id":"themes/hexo-theme-next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1515401437826},{"_id":"themes/hexo-theme-next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1515401437827},{"_id":"themes/hexo-theme-next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1515401437827},{"_id":"themes/hexo-theme-next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1515401437827},{"_id":"themes/hexo-theme-next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1515401437827},{"_id":"themes/hexo-theme-next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1515401437827},{"_id":"themes/hexo-theme-next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1515401437827},{"_id":"themes/hexo-theme-next/README.cn.md","hash":"b764aae78ffa561a9a68fdee4c6f21c3ce260fbb","modified":1515401437828},{"_id":"themes/hexo-theme-next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1515401437827},{"_id":"themes/hexo-theme-next/README.md","hash":"19d57d39580c798dfdd119024d8c3342431b4ab4","modified":1515401437828},{"_id":"themes/hexo-theme-next/_config.yml","hash":"cf875e1d45c07f1ce66f05b0b1a41221ceb79199","modified":1515401437828},{"_id":"themes/hexo-theme-next/bower.json","hash":"47471a8f13528dc4052b746db5b4be2375682173","modified":1515401437829},{"_id":"themes/hexo-theme-next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1515401437829},{"_id":"themes/hexo-theme-next/package.json","hash":"39370e2aadf1f9a7c105edff064c6e47682b3932","modified":1515401437856},{"_id":"source/_posts/hexo从0到1个性化博客搭建之环境集成.md","hash":"6274162963c6947b4e53b57f4338abf0d4730491","modified":1515401437823},{"_id":"source/_posts/最新Python面试题.md","hash":"95f0f646a791f384b024e12977fae08d1b18e293","modified":1515407434186},{"_id":"source/tags/index.md","hash":"5be7aed2d0ee9e0b6502ef626f8eb45c5507b3e9","modified":1515401437824},{"_id":"source/about/index.md","hash":"547f70309ab581e89d2ce3ccb9e64e87d3ec8ab1","modified":1515401437824},{"_id":"source/categories/index.md","hash":"7f2d9214c38430e3d10ef25458273e361fa0a029","modified":1515401437824},{"_id":"themes/hexo-theme-next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1515401437826},{"_id":"themes/hexo-theme-next/.github/ISSUE_TEMPLATE.md","hash":"b1ec000babd42bb7ffd26f5ad8aac9b5bec79ae5","modified":1515401437826},{"_id":"themes/hexo-theme-next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1515401437826},{"_id":"themes/hexo-theme-next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1515401437826},{"_id":"themes/hexo-theme-next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1515401437829},{"_id":"themes/hexo-theme-next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1515401437829},{"_id":"themes/hexo-theme-next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1515401437829},{"_id":"themes/hexo-theme-next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1515401437830},{"_id":"themes/hexo-theme-next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1515401437830},{"_id":"themes/hexo-theme-next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1515401437830},{"_id":"themes/hexo-theme-next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1515401437830},{"_id":"themes/hexo-theme-next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1515401437831},{"_id":"themes/hexo-theme-next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1515401437831},{"_id":"themes/hexo-theme-next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1515401437831},{"_id":"themes/hexo-theme-next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1515401437831},{"_id":"themes/hexo-theme-next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1515401437832},{"_id":"themes/hexo-theme-next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1515401437832},{"_id":"themes/hexo-theme-next/languages/zh-Hans.yml","hash":"ca158b8adbf0f1ea189cb06cb5eb50994cf957a9","modified":1515401437832},{"_id":"themes/hexo-theme-next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1515401437832},{"_id":"themes/hexo-theme-next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1515401437832},{"_id":"themes/hexo-theme-next/layout/_layout.swig","hash":"e2630cd5cc873b17734bd92ffe0b8085351fc1e9","modified":1515401437833},{"_id":"themes/hexo-theme-next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1515401437855},{"_id":"themes/hexo-theme-next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1515401437855},{"_id":"themes/hexo-theme-next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1515401437855},{"_id":"themes/hexo-theme-next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1515401437856},{"_id":"themes/hexo-theme-next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1515401437856},{"_id":"themes/hexo-theme-next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1515401437856},{"_id":"themes/hexo-theme-next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1515401437856},{"_id":"themes/hexo-theme-next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1515401437857},{"_id":"themes/hexo-theme-next/scripts/merge-configs.js","hash":"5758f8f3f12d17bc80da65bb808a20b3a8aae186","modified":1515401437856},{"_id":"themes/hexo-theme-next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1515401437940},{"_id":"themes/hexo-theme-next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1515401437940},{"_id":"themes/hexo-theme-next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1515401437940},{"_id":"themes/hexo-theme-next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515401437886},{"_id":"themes/hexo-theme-next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1515401437833},{"_id":"themes/hexo-theme-next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1515401437833},{"_id":"themes/hexo-theme-next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1515401437833},{"_id":"themes/hexo-theme-next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1515401437833},{"_id":"themes/hexo-theme-next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1515401437834},{"_id":"themes/hexo-theme-next/layout/_macro/post.swig","hash":"af9d26c91e92aae458cc77b03964c5191f1b7a47","modified":1515401437834},{"_id":"themes/hexo-theme-next/layout/_macro/sidebar.swig","hash":"b9f9959225876fb56fb3fba96306d19396e704d4","modified":1515401437834},{"_id":"themes/hexo-theme-next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1515401437834},{"_id":"themes/hexo-theme-next/layout/_partials/footer.swig","hash":"0800d8ee3f10d4323385b9df82a9498374c78a7a","modified":1515401437835},{"_id":"themes/hexo-theme-next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1515401437834},{"_id":"themes/hexo-theme-next/layout/_partials/head.swig","hash":"b14b2418732af94ef24357eaaf2fb4079d92e83a","modified":1515401437835},{"_id":"themes/hexo-theme-next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1515401437837},{"_id":"themes/hexo-theme-next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1515401437837},{"_id":"themes/hexo-theme-next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1515401437837},{"_id":"themes/hexo-theme-next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1515401437837},{"_id":"themes/hexo-theme-next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1515401437852},{"_id":"themes/hexo-theme-next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1515401437852},{"_id":"themes/hexo-theme-next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1515401437852},{"_id":"themes/hexo-theme-next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1515401437852},{"_id":"themes/hexo-theme-next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1515401437853},{"_id":"themes/hexo-theme-next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1515401437853},{"_id":"themes/hexo-theme-next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1515401437853},{"_id":"themes/hexo-theme-next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1515401437839},{"_id":"themes/hexo-theme-next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1515401437839},{"_id":"themes/hexo-theme-next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1515401437842},{"_id":"themes/hexo-theme-next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1515401437857},{"_id":"themes/hexo-theme-next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1515401437858},{"_id":"themes/hexo-theme-next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1515401437857},{"_id":"themes/hexo-theme-next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1515401437857},{"_id":"themes/hexo-theme-next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1515401437858},{"_id":"themes/hexo-theme-next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1515401437858},{"_id":"themes/hexo-theme-next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1515401437858},{"_id":"themes/hexo-theme-next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1515401437858},{"_id":"themes/hexo-theme-next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1515401437859},{"_id":"themes/hexo-theme-next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1515401437887},{"_id":"themes/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1515401437887},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1515401437887},{"_id":"themes/hexo-theme-next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1515401437887},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1515401437888},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1515401437888},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1515401437888},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1515401437888},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1515401437889},{"_id":"themes/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1515401437889},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1515401437889},{"_id":"themes/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1515401437889},{"_id":"themes/hexo-theme-next/source/images/favicon32.ico","hash":"062c9ee87cbf947a533cde405477119ae4f86a1e","modified":1515401437889},{"_id":"themes/hexo-theme-next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1515401437889},{"_id":"themes/hexo-theme-next/source/images/favicon16.ico","hash":"68bcbc7557e326248b0b3962187e7644df46aafa","modified":1515401437889},{"_id":"themes/hexo-theme-next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1515401437890},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1515401437891},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1515401437891},{"_id":"themes/hexo-theme-next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1515401437890},{"_id":"themes/hexo-theme-next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1515401437891},{"_id":"themes/hexo-theme-next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1515401437886},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515401437840},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515401437840},{"_id":"themes/hexo-theme-next/source/images/max.jpg","hash":"e3c1724810efe4d0c377e5cf6758bf64988dc67c","modified":1515401437890},{"_id":"themes/hexo-theme-next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515401437874},{"_id":"themes/hexo-theme-next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515401437874},{"_id":"themes/hexo-theme-next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515401437875},{"_id":"themes/hexo-theme-next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515401437885},{"_id":"themes/hexo-theme-next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515401437886},{"_id":"themes/hexo-theme-next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1515401437835},{"_id":"themes/hexo-theme-next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1515401437837},{"_id":"themes/hexo-theme-next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1515401437838},{"_id":"themes/hexo-theme-next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1515401437838},{"_id":"themes/hexo-theme-next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1515401437838},{"_id":"themes/hexo-theme-next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1515401437838},{"_id":"themes/hexo-theme-next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1515401437838},{"_id":"themes/hexo-theme-next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1515401437838},{"_id":"themes/hexo-theme-next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1515401437839},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1515401437843},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1515401437843},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1515401437843},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1515401437843},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1515401437843},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1515401437843},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1515401437844},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1515401437844},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1515401437844},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1515401437844},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1515401437844},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1515401437844},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1515401437844},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1515401437846},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1515401437847},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1515401437847},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1515401437850},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1515401437850},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1515401437851},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1515401437851},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1515401437851},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1515401437851},{"_id":"themes/hexo-theme-next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1515401437854},{"_id":"themes/hexo-theme-next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1515401437854},{"_id":"themes/hexo-theme-next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1515401437855},{"_id":"themes/hexo-theme-next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1515401437855},{"_id":"themes/hexo-theme-next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1515401437839},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1515401437839},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1515401437842},{"_id":"themes/hexo-theme-next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1515401437893},{"_id":"themes/hexo-theme-next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1515401437893},{"_id":"themes/hexo-theme-next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1515401437893},{"_id":"themes/hexo-theme-next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1515401437893},{"_id":"themes/hexo-theme-next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1515401437894},{"_id":"themes/hexo-theme-next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1515401437894},{"_id":"themes/hexo-theme-next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1515401437894},{"_id":"themes/hexo-theme-next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1515401437895},{"_id":"themes/hexo-theme-next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1515401437895},{"_id":"themes/hexo-theme-next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1515401437895},{"_id":"themes/hexo-theme-next/source/js/src/utils.js","hash":"35e229e9b87247831ff14dd11e1fe8b60a1d559a","modified":1515401437895},{"_id":"themes/hexo-theme-next/source/css/_custom/custom.styl","hash":"937052c49d49d64b4eca8ade99c1aa406fd0ac05","modified":1515469899333},{"_id":"themes/hexo-theme-next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1515401437874},{"_id":"themes/hexo-theme-next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1515401437875},{"_id":"themes/hexo-theme-next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1515401437875},{"_id":"themes/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1515401437885},{"_id":"themes/hexo-theme-next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1515401437885},{"_id":"themes/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1515401437886},{"_id":"themes/hexo-theme-next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1515401437886},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1515401437900},{"_id":"themes/hexo-theme-next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1515401437904},{"_id":"themes/hexo-theme-next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1515401437904},{"_id":"themes/hexo-theme-next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1515401437908},{"_id":"themes/hexo-theme-next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1515401437909},{"_id":"themes/hexo-theme-next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1515401437909},{"_id":"themes/hexo-theme-next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1515401437909},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1515401437910},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1515401437910},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1515401437910},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1515401437911},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1515401437911},{"_id":"themes/hexo-theme-next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1515401437920},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1515401437921},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1515401437922},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1515401437921},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1515401437922},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1515401437922},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1515401437922},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1515401437924},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1515401437926},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1515401437928},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1515401437928},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1515401437928},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1515401437928},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1515401437929},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1515401437929},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1515401437929},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1515401437929},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1515401437930},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1515401437929},{"_id":"themes/hexo-theme-next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1515401437931},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1515401437930},{"_id":"themes/hexo-theme-next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1515401437923},{"_id":"themes/hexo-theme-next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1515401437923},{"_id":"themes/hexo-theme-next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1515401437924},{"_id":"themes/hexo-theme-next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1515401437931},{"_id":"themes/hexo-theme-next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1515401437932},{"_id":"themes/hexo-theme-next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1515401437932},{"_id":"themes/hexo-theme-next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1515401437937},{"_id":"themes/hexo-theme-next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1515401437937},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1515401437939},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1515401437939},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1515401437939},{"_id":"themes/hexo-theme-next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1515401437921},{"_id":"themes/hexo-theme-next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1515401437854},{"_id":"themes/hexo-theme-next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1515401437854},{"_id":"themes/hexo-theme-next/source/images/wxavatar.jpg","hash":"c628ee0c4345854adf6f84f2d4988d5d65d9cebf","modified":1515401437893},{"_id":"themes/hexo-theme-next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1515401437895},{"_id":"themes/hexo-theme-next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1515401437872},{"_id":"themes/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1515401437859},{"_id":"themes/hexo-theme-next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1515401437859},{"_id":"themes/hexo-theme-next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1515401437859},{"_id":"themes/hexo-theme-next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1515401437860},{"_id":"themes/hexo-theme-next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1515401437860},{"_id":"themes/hexo-theme-next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1515401437863},{"_id":"themes/hexo-theme-next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1515401437868},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1515401437873},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1515401437873},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1515401437873},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1515401437873},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1515401437873},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1515401437874},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1515401437876},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1515401437876},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1515401437876},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1515401437876},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1515401437876},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1515401437877},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1515401437877},{"_id":"themes/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1515401437875},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1515401437878},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1515401437878},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"a98ad885ee4f48d85b2578a0b9c2bbf166e96733","modified":1515401437878},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1515401437879},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1515401437879},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1515401437879},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1515401437879},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1515401437881},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1515401437884},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"30561ed60fc64f3e4ce85143bdb55faa814743a6","modified":1515401437885},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1515401437885},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1515401437898},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1515401437900},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1515401437899},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1515401437904},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1515401437905},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1515401437905},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1515401437905},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1515401437905},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1515401437906},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1515401437907},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1515401437908},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1515401437908},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1515401437910},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1515401437910},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1515401437911},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1515401437912},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1515401437912},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1515401437936},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1515401437936},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1515401437899},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1515401437919},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1515401437920},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1515401437938},{"_id":"themes/hexo-theme-next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1515401437860},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1515401437860},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1515401437860},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1515401437861},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1515401437861},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1515401437861},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1515401437861},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1515401437861},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1515401437862},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1515401437862},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1515401437862},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1515401437862},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1515401437862},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1515401437863},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1515401437863},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1515401437863},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1515401437864},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1515401437864},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1515401437864},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1515401437864},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1515401437865},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1515401437864},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1515401437865},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1515401437865},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1515401437865},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1515401437865},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1515401437865},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1515401437866},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1515401437866},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1515401437866},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"3bd37dd9d289eae5ea13a80821cf992bd941cce3","modified":1515401437866},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1515401437867},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1515401437867},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1515401437867},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1515401437868},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"28a8737c090fbffd188d73a00b42e90b9ee57df2","modified":1515401437868},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1515401437868},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1515401437868},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1515401437868},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1515401437869},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1515401437869},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1515401437869},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1515401437869},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1515401437869},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1515401437870},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1515401437870},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1515401437870},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1515401437870},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1515401437871},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1515401437871},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1515401437871},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1515401437871},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1515401437871},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1515401437872},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1515401437872},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1515401437872},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1515401437872},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1515401437872},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1515401437877},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1515401437878},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1515401437879},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1515401437896},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1515401437896},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1515401437897},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1515401437897},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1515401437897},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1515401437906},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1515401437906},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1515401437906},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1515401437907},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1515401437907},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1515401437907},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1515401437913},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1515401437915},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1515401437919},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1515401437903},{"_id":"themes/hexo-theme-next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1515401437936},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1515401437918},{"_id":"public/atom.xml","hash":"af24c02acd248d113ca6d6cf681049d5d3f9f738","modified":1515470160561},{"_id":"public/tags/index.html","hash":"9dfc76d0d27782459ff7d2a5be362d89e74dbf53","modified":1515470160614},{"_id":"public/about/index.html","hash":"1532310503e740fc224f2c393219f4eaac732d6b","modified":1515470160615},{"_id":"public/categories/index.html","hash":"0bf13bb68d96f58c49ac36e7693d5217ecc49b10","modified":1515470160615},{"_id":"public/categories/Hexo/index.html","hash":"29507d5b60205851f41d5d211c9be3eaee39468d","modified":1515470160615},{"_id":"public/categories/面试题/index.html","hash":"83f7fc17c863d6729b2ad2c587906e4db59bf3a2","modified":1515470160615},{"_id":"public/archives/index.html","hash":"3006aba50f07da549100b03cae70bcc8344d3235","modified":1515470160615},{"_id":"public/archives/2017/index.html","hash":"b8e31da2377b091a01a64f7d455a4b1735baa5a3","modified":1515470160615},{"_id":"public/archives/2017/12/index.html","hash":"9cebf6c4c9f336ead0bd5cb3c286975094dda95c","modified":1515470160615},{"_id":"public/archives/2018/01/index.html","hash":"c238c17a2a5c116f4877c34ae5c7f93980d88a0c","modified":1515470160615},{"_id":"public/archives/2018/index.html","hash":"941b560acb1d86fd467a94318e42233c71d95aa8","modified":1515470160615},{"_id":"public/tags/Hexo/index.html","hash":"19ccc7c588dd2d8c2d17fcc76ea7b7b4704512c8","modified":1515470160615},{"_id":"public/2018/01/05/最新Python面试题/index.html","hash":"e4befc688d5c3d80f1bad2cae18bdcb0e1494e62","modified":1515470160615},{"_id":"public/2017/12/22/hexo从0到1个性化博客搭建之环境集成/index.html","hash":"0964b22dc9866365ac6bc13e8a7d7e600207bd2e","modified":1515470160616},{"_id":"public/index.html","hash":"ef288e9f2018c98c465a130a480de9e456829ad2","modified":1515470160616},{"_id":"public/tags/面试题/index.html","hash":"d519d6369ce942cfb10fa678e21b9d7e948ec73d","modified":1515470160630},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1515470160630},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1515470160630},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1515470160630},{"_id":"public/CNAME","hash":"fd33f36ca680caa76ab9f9d9c146834b731cf8e2","modified":1515470160630},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1515470160630},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1515470160630},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1515470160630},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1515470160630},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1515470160631},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1515470160631},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1515470160631},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1515470160631},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1515470160631},{"_id":"public/images/favicon32.ico","hash":"062c9ee87cbf947a533cde405477119ae4f86a1e","modified":1515470160631},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1515470160631},{"_id":"public/images/favicon16.ico","hash":"68bcbc7557e326248b0b3962187e7644df46aafa","modified":1515470160631},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1515470160631},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1515470160631},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1515470160631},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1515470160631},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1515470160631},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1515470160631},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1515470160632},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1515470160632},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1515470160632},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1515470160632},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1515470160632},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1515470160632},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1515470160632},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1515470160632},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1515470160632},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1515470160633},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1515470160633},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1515470160633},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1515470160633},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1515470160633},{"_id":"public/images/max.jpg","hash":"e3c1724810efe4d0c377e5cf6758bf64988dc67c","modified":1515470161243},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1515470161246},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1515470161254},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1515470161264},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1515470161265},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1515470161265},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1515470161265},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1515470161265},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1515470161265},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1515470161265},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1515470161265},{"_id":"public/js/src/utils.js","hash":"2ae9d029711a78a351a0244025e79533d1ceb5ba","modified":1515470161265},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1515470161265},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1515470161265},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1515470161265},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1515470161265},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1515470161265},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1515470161265},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1515470161265},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1515470161265},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1515470161265},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1515470161265},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1515470161265},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1515470161266},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1515470161266},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1515470161266},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1515470161266},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1515470161266},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1515470161266},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1515470161266},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1515470161266},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1515470161266},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1515470161266},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1515470161266},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1515470161266},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1515470161266},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1515470161266},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1515470161266},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1515470161266},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1515470161266},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1515470161266},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1515470161266},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1515470161266},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1515470161267},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1515470161267},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1515470161267},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1515470161267},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1515470161267},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1515470161267},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1515470161267},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1515470161267},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1515470161267},{"_id":"public/css/main.css","hash":"0d52a688be3cde5070e090376b2a62fd2ad211f5","modified":1515470161267},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1515470161267},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1515470161267},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1515470161267},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1515470161267},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1515470161267},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1515470161268},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1515470161268},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1515470161268},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1515470161268},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1515470161268},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1515470161268},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1515470161268},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1515470161268},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1515470161268},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1515470161268},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1515470161268},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1515470161268},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1515470161268},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1515470161268},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1515470161268},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1515470161269},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1515470161269},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1515470161269},{"_id":"public/images/wxavatar.jpg","hash":"c628ee0c4345854adf6f84f2d4988d5d65d9cebf","modified":1515470161286},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1515470161325}],"Category":[{"name":"Hexo","_id":"cjc73syu500044kw0bbhazace"},{"name":"面试题","_id":"cjc73syug00074kw05fzntcex"}],"Data":[],"Page":[{"title":"tags","date":"2017-12-21T07:48:00.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-12-21 15:48:00\ntype: tags\n---\n","updated":"2018-01-08T08:50:37.824Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjc73sytv00014kw03jmn13q4","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2017-12-21T04:48:24.000Z","_content":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n| 世之奇伟、瑰怪，非常之观，常在于险远，而人之所罕至焉，故非有志者不能至也。\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-12-21 12:48:24\n---\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n| 世之奇伟、瑰怪，非常之观，常在于险远，而人之所罕至焉，故非有志者不能至也。\n","updated":"2018-01-08T08:50:37.824Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjc73syu300034kw0lizojo9h","content":"<p>| 世之奇伟、瑰怪，非常之观，常在于险远，而人之所罕至焉，故非有志者不能至也。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>| 世之奇伟、瑰怪，非常之观，常在于险远，而人之所罕至焉，故非有志者不能至也。</p>\n"},{"title":"categories","date":"2017-12-21T06:49:23.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-12-21 14:49:23\ntype: \"categories\"\n---\n","updated":"2018-01-08T08:50:37.824Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjc73syub00064kw0vtix5uiy","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hexo从0到1个性化博客搭之环境集成","date":"2017-12-22T03:13:46.000Z","_content":"\n### 概述\n> 入行有三年了，一直想拥有属于自己的博客，但我这种懒癌患者知道今天才下手。亲手配置上自己的域名，域名前绿色的小锁；高度定制的前端页面；并且我们不用担心项目的部署问题、前端静态页面的生成问题；最重要的是所有的配置需要免费（大声跟我念 **qiong**）。\n网络上关于博客搭建的教程一大堆，在此仅作为我自己搭建博客的一个记录及踩过的坑；不尽详尽。ok，废话不多说，here we go。\n现有如下的方案\n- **Node.js** (静态HTML页面生成的底层支持)\n- **Git** (版本管理，博客项目也需要部署到GithubPage上)\n- ** GithubPage** (博客部署，Github免费提供1G的存储空间)\n- **Hexo** (快速、简洁、高效的博客框架，为Github开源框架)\n- **Hexo-theme-next** (博客主题插件，为Github上特别流行的开源框架)\n- **阿里云域名服务** (添加自己的域名)\n- **Cloudflare CDN分发服务** (让自己的域名支持https)\n- **Hexo所支持的三方插件服务** (集成站内的全文检索等功能)\n- **免费的图床** (如7牛)\n- **DaoVoice** (支持站内时时聊天)\n此外，只要你会**markdown**，就可以打造属于自己的个性化的博客站点。以上所有版本在此不再一一列举，保持最新版本即可。\n\n\n### 环境搭建\n- 安装[Node.js](https://nodejs.org/zh-cn/)\n![](https://t1.aixinxi.net/o_1c1ugl7i54uvf0fkvra2l11jba.png-w.jpg)\n点击下载安装即可(根据自己不同的操作系统选择)。\n---\n- 安装[Git](https://git-scm.com/)\n![](https://t1.aixinxi.net/o_1c1uh6db42ou10gs1cpnbnm1fg7a.png-w.jpg)\n选择合适的操作系统。\n---\n- 配置GithubPage\n登陆自己的Github账户，创建仓库。\n![](https://t1.aixinxi.net/o_1c1uk568c1huh10b81op4183n1m3ea.png-w.jpg)\n其中红线部分换成你自己的Github名，此格式为固定格式不容许更改。在自己的桌面将项目clone下来，此时应该一个文件也没有(如果创建了README.md文件，hexo在执行hexo g 的时候会将此文件也生成为静态的html文件)。此时在本地创建两个分支master为默认的主分支，(部署我们的生成的静态文件使用)，创建一个分支列如hexo用来存放我们的hexo的项目。创建好分支之后与远程仓库进行关联push上去。\n---\n- 安装[Hexo](https://hexo.io/zh-cn/index.html) \n![](https://t1.aixinxi.net/o_1c1uhgdt91ts7apf1nnk1foed37a.png-w.jpg)\n\n\n打开终端执行\n```\nnpm install hexo-cli -g\n```\ncd 到刚才的从github clone下来的文件夹下将git checkout 到hexo分支下，然后执行\n```\nhexo init\n```\n然后执行\n```\nnpm install\nhexo server\n```\n然后你会看到类似这样的文件内容\n![](https://t1.aixinxi.net/o_1c1uhrp9i1dmev3g5e7crdioua.png-w.jpg)\n此时继续在终端执行\n```\nhexo clean\nhexo g\nhexo s\n```\n不出什么差错的话就可以在本地的4000端口上看到默认的博客站点，control+c可以停掉站点\n默认的站点中会有一篇Hello world的文章。\n可以先介绍一下部署的命令:\n```\nhexo d -g\n```\n\n执行此条命令之后，hexo会自动的将生成的静态html文件部署到你github项目的master分支上去；也就是会在.deploy文件中生成需要部署的静态html文件(需要配置_config.yml文件稍后讲解)；也就是说我们今后不用刻意的push项目的master分支；我们的版本控制在hexo分之下即可。我们也不用配置.gitignore文件(保持默认的忽略文件即可)。\n\n---\n- 安装hexo-theme-next\n1. cd 到blog文件夹下的themes文件夹下执行\n```\ngit clone git@github.com:iissnan/hexo-theme-next.git\n```\n2. 或者执行\n```\ngit clone https://github.com/iissnan/hexo-theme-next.git\n```\n第一种方式需要在本地git及github上配置SSH KEY，在此不再赘述。\n![](https://t1.aixinxi.net/o_1c1uil0ghjts1d7ovd177p78a.png-w.jpg)\nclone完毕之后如下图\n\n\n---\n![](https://t1.aixinxi.net/o_1c1ul9kr91ce114i7ku417vcehoa.png-w.jpg)\n我们需要在文件夹的目录下显示隐藏文件(因为有坑)；进入themes文件夹下的hexo-theme-next文件夹，将.git隐藏文件删除；如果不删除当hexo项目切换到hexo分支push的时候是不包括hexo-theme-next文件夹下的内容的(它本身也是一个git仓库)。\n\n---\n- 购买[阿里云域名服务](https://cn.aliyun.com)\n笔者花了15¥/年购买了自己的域名服务，国际域名的话还是实名认证比较好。\n![](https://t1.aixinxi.net/o_1c1umpavt3vv1kfp1u5o549fa.png-w.jpg)\n域名的配置稍后展示。\n\n---\n- 注册[Cloudflare](https://www.cloudflare.com)做CDN分发，配置SSL\n可能需要科学上网更快点\n![](https://t1.aixinxi.net/o_1c1umvn7nd49tq0119prvcpnca.png-w.jpg)\n所需配置稍后讲解。\n\n---\n- 注册免费的图床[7牛](https://www.qiniu.com)\n![](https://t1.aixinxi.net/o_1c1un6df1lu01lkv1kvkpam12npa.png-w.jpg)\nMarkdown编辑所用。\n\n---\n- 注册[DaoVoice](https://account.daocloud.io/signin)站内及时消息\n![](https://t1.aixinxi.net/o_1c1unbgru16ek1aetu9g1noe2lba.png-w.jpg)\n最好使用github账号登录。\n\n---\n**至此现有的基本准备工作基本完成**。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/hexo从0到1个性化博客搭建之环境集成.md","raw":"---\ntitle: Hexo从0到1个性化博客搭之环境集成\ndate: 2017-12-22 11:13:46\ntags: Hexo\ncategories: Hexo\n---\n\n### 概述\n> 入行有三年了，一直想拥有属于自己的博客，但我这种懒癌患者知道今天才下手。亲手配置上自己的域名，域名前绿色的小锁；高度定制的前端页面；并且我们不用担心项目的部署问题、前端静态页面的生成问题；最重要的是所有的配置需要免费（大声跟我念 **qiong**）。\n网络上关于博客搭建的教程一大堆，在此仅作为我自己搭建博客的一个记录及踩过的坑；不尽详尽。ok，废话不多说，here we go。\n现有如下的方案\n- **Node.js** (静态HTML页面生成的底层支持)\n- **Git** (版本管理，博客项目也需要部署到GithubPage上)\n- ** GithubPage** (博客部署，Github免费提供1G的存储空间)\n- **Hexo** (快速、简洁、高效的博客框架，为Github开源框架)\n- **Hexo-theme-next** (博客主题插件，为Github上特别流行的开源框架)\n- **阿里云域名服务** (添加自己的域名)\n- **Cloudflare CDN分发服务** (让自己的域名支持https)\n- **Hexo所支持的三方插件服务** (集成站内的全文检索等功能)\n- **免费的图床** (如7牛)\n- **DaoVoice** (支持站内时时聊天)\n此外，只要你会**markdown**，就可以打造属于自己的个性化的博客站点。以上所有版本在此不再一一列举，保持最新版本即可。\n\n\n### 环境搭建\n- 安装[Node.js](https://nodejs.org/zh-cn/)\n![](https://t1.aixinxi.net/o_1c1ugl7i54uvf0fkvra2l11jba.png-w.jpg)\n点击下载安装即可(根据自己不同的操作系统选择)。\n---\n- 安装[Git](https://git-scm.com/)\n![](https://t1.aixinxi.net/o_1c1uh6db42ou10gs1cpnbnm1fg7a.png-w.jpg)\n选择合适的操作系统。\n---\n- 配置GithubPage\n登陆自己的Github账户，创建仓库。\n![](https://t1.aixinxi.net/o_1c1uk568c1huh10b81op4183n1m3ea.png-w.jpg)\n其中红线部分换成你自己的Github名，此格式为固定格式不容许更改。在自己的桌面将项目clone下来，此时应该一个文件也没有(如果创建了README.md文件，hexo在执行hexo g 的时候会将此文件也生成为静态的html文件)。此时在本地创建两个分支master为默认的主分支，(部署我们的生成的静态文件使用)，创建一个分支列如hexo用来存放我们的hexo的项目。创建好分支之后与远程仓库进行关联push上去。\n---\n- 安装[Hexo](https://hexo.io/zh-cn/index.html) \n![](https://t1.aixinxi.net/o_1c1uhgdt91ts7apf1nnk1foed37a.png-w.jpg)\n\n\n打开终端执行\n```\nnpm install hexo-cli -g\n```\ncd 到刚才的从github clone下来的文件夹下将git checkout 到hexo分支下，然后执行\n```\nhexo init\n```\n然后执行\n```\nnpm install\nhexo server\n```\n然后你会看到类似这样的文件内容\n![](https://t1.aixinxi.net/o_1c1uhrp9i1dmev3g5e7crdioua.png-w.jpg)\n此时继续在终端执行\n```\nhexo clean\nhexo g\nhexo s\n```\n不出什么差错的话就可以在本地的4000端口上看到默认的博客站点，control+c可以停掉站点\n默认的站点中会有一篇Hello world的文章。\n可以先介绍一下部署的命令:\n```\nhexo d -g\n```\n\n执行此条命令之后，hexo会自动的将生成的静态html文件部署到你github项目的master分支上去；也就是会在.deploy文件中生成需要部署的静态html文件(需要配置_config.yml文件稍后讲解)；也就是说我们今后不用刻意的push项目的master分支；我们的版本控制在hexo分之下即可。我们也不用配置.gitignore文件(保持默认的忽略文件即可)。\n\n---\n- 安装hexo-theme-next\n1. cd 到blog文件夹下的themes文件夹下执行\n```\ngit clone git@github.com:iissnan/hexo-theme-next.git\n```\n2. 或者执行\n```\ngit clone https://github.com/iissnan/hexo-theme-next.git\n```\n第一种方式需要在本地git及github上配置SSH KEY，在此不再赘述。\n![](https://t1.aixinxi.net/o_1c1uil0ghjts1d7ovd177p78a.png-w.jpg)\nclone完毕之后如下图\n\n\n---\n![](https://t1.aixinxi.net/o_1c1ul9kr91ce114i7ku417vcehoa.png-w.jpg)\n我们需要在文件夹的目录下显示隐藏文件(因为有坑)；进入themes文件夹下的hexo-theme-next文件夹，将.git隐藏文件删除；如果不删除当hexo项目切换到hexo分支push的时候是不包括hexo-theme-next文件夹下的内容的(它本身也是一个git仓库)。\n\n---\n- 购买[阿里云域名服务](https://cn.aliyun.com)\n笔者花了15¥/年购买了自己的域名服务，国际域名的话还是实名认证比较好。\n![](https://t1.aixinxi.net/o_1c1umpavt3vv1kfp1u5o549fa.png-w.jpg)\n域名的配置稍后展示。\n\n---\n- 注册[Cloudflare](https://www.cloudflare.com)做CDN分发，配置SSL\n可能需要科学上网更快点\n![](https://t1.aixinxi.net/o_1c1umvn7nd49tq0119prvcpnca.png-w.jpg)\n所需配置稍后讲解。\n\n---\n- 注册免费的图床[7牛](https://www.qiniu.com)\n![](https://t1.aixinxi.net/o_1c1un6df1lu01lkv1kvkpam12npa.png-w.jpg)\nMarkdown编辑所用。\n\n---\n- 注册[DaoVoice](https://account.daocloud.io/signin)站内及时消息\n![](https://t1.aixinxi.net/o_1c1unbgru16ek1aetu9g1noe2lba.png-w.jpg)\n最好使用github账号登录。\n\n---\n**至此现有的基本准备工作基本完成**。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"hexo从0到1个性化博客搭建之环境集成","published":1,"updated":"2018-01-08T08:50:37.823Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjc73syto00004kw01w5v0ul4","content":"<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><blockquote>\n<p>入行有三年了，一直想拥有属于自己的博客，但我这种懒癌患者知道今天才下手。亲手配置上自己的域名，域名前绿色的小锁；高度定制的前端页面；并且我们不用担心项目的部署问题、前端静态页面的生成问题；最重要的是所有的配置需要免费（大声跟我念 <strong>qiong</strong>）。<br>网络上关于博客搭建的教程一大堆，在此仅作为我自己搭建博客的一个记录及踩过的坑；不尽详尽。ok，废话不多说，here we go。<br>现有如下的方案</p>\n<ul>\n<li><strong>Node.js</strong> (静态HTML页面生成的底层支持)</li>\n<li><strong>Git</strong> (版本管理，博客项目也需要部署到GithubPage上)</li>\n<li><strong> GithubPage</strong> (博客部署，Github免费提供1G的存储空间)</li>\n<li><strong>Hexo</strong> (快速、简洁、高效的博客框架，为Github开源框架)</li>\n<li><strong>Hexo-theme-next</strong> (博客主题插件，为Github上特别流行的开源框架)</li>\n<li><strong>阿里云域名服务</strong> (添加自己的域名)</li>\n<li><strong>Cloudflare CDN分发服务</strong> (让自己的域名支持https)</li>\n<li><strong>Hexo所支持的三方插件服务</strong> (集成站内的全文检索等功能)</li>\n<li><strong>免费的图床</strong> (如7牛)</li>\n<li><strong>DaoVoice</strong> (支持站内时时聊天)<br>此外，只要你会<strong>markdown</strong>，就可以打造属于自己的个性化的博客站点。以上所有版本在此不再一一列举，保持最新版本即可。</li>\n</ul>\n</blockquote>\n<h3 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h3><ul>\n<li>安装<a href=\"https://nodejs.org/zh-cn/\" target=\"_blank\" rel=\"noopener\">Node.js</a><br><img src=\"https://t1.aixinxi.net/o_1c1ugl7i54uvf0fkvra2l11jba.png-w.jpg\" alt=\"\"><br>点击下载安装即可(根据自己不同的操作系统选择)。</li>\n</ul>\n<hr>\n<ul>\n<li>安装<a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a><br><img src=\"https://t1.aixinxi.net/o_1c1uh6db42ou10gs1cpnbnm1fg7a.png-w.jpg\" alt=\"\"><br>选择合适的操作系统。</li>\n</ul>\n<hr>\n<ul>\n<li>配置GithubPage<br>登陆自己的Github账户，创建仓库。<br><img src=\"https://t1.aixinxi.net/o_1c1uk568c1huh10b81op4183n1m3ea.png-w.jpg\" alt=\"\"><br>其中红线部分换成你自己的Github名，此格式为固定格式不容许更改。在自己的桌面将项目clone下来，此时应该一个文件也没有(如果创建了README.md文件，hexo在执行hexo g 的时候会将此文件也生成为静态的html文件)。此时在本地创建两个分支master为默认的主分支，(部署我们的生成的静态文件使用)，创建一个分支列如hexo用来存放我们的hexo的项目。创建好分支之后与远程仓库进行关联push上去。</li>\n</ul>\n<hr>\n<ul>\n<li>安装<a href=\"https://hexo.io/zh-cn/index.html\" target=\"_blank\" rel=\"noopener\">Hexo</a><br><img src=\"https://t1.aixinxi.net/o_1c1uhgdt91ts7apf1nnk1foed37a.png-w.jpg\" alt=\"\"></li>\n</ul>\n<p>打开终端执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></p>\n<p>cd 到刚才的从github clone下来的文件夹下将git checkout 到hexo分支下，然后执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure></p>\n<p>然后执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure></p>\n<p>然后你会看到类似这样的文件内容<br><img src=\"https://t1.aixinxi.net/o_1c1uhrp9i1dmev3g5e7crdioua.png-w.jpg\" alt=\"\"><br>此时继续在终端执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure></p>\n<p>不出什么差错的话就可以在本地的4000端口上看到默认的博客站点，control+c可以停掉站点<br>默认的站点中会有一篇Hello world的文章。<br>可以先介绍一下部署的命令:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure></p>\n<p>执行此条命令之后，hexo会自动的将生成的静态html文件部署到你github项目的master分支上去；也就是会在.deploy文件中生成需要部署的静态html文件(需要配置_config.yml文件稍后讲解)；也就是说我们今后不用刻意的push项目的master分支；我们的版本控制在hexo分之下即可。我们也不用配置.gitignore文件(保持默认的忽略文件即可)。</p>\n<hr>\n<ul>\n<li>安装hexo-theme-next</li>\n</ul>\n<ol>\n<li><p>cd 到blog文件夹下的themes文件夹下执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@github.com:iissnan/hexo-theme-next.git</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>或者执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/iissnan/hexo-theme-next.git</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>第一种方式需要在本地git及github上配置SSH KEY，在此不再赘述。<br><img src=\"https://t1.aixinxi.net/o_1c1uil0ghjts1d7ovd177p78a.png-w.jpg\" alt=\"\"><br>clone完毕之后如下图</p>\n<hr>\n<p><img src=\"https://t1.aixinxi.net/o_1c1ul9kr91ce114i7ku417vcehoa.png-w.jpg\" alt=\"\"><br>我们需要在文件夹的目录下显示隐藏文件(因为有坑)；进入themes文件夹下的hexo-theme-next文件夹，将.git隐藏文件删除；如果不删除当hexo项目切换到hexo分支push的时候是不包括hexo-theme-next文件夹下的内容的(它本身也是一个git仓库)。</p>\n<hr>\n<ul>\n<li>购买<a href=\"https://cn.aliyun.com\" target=\"_blank\" rel=\"noopener\">阿里云域名服务</a><br>笔者花了15¥/年购买了自己的域名服务，国际域名的话还是实名认证比较好。<br><img src=\"https://t1.aixinxi.net/o_1c1umpavt3vv1kfp1u5o549fa.png-w.jpg\" alt=\"\"><br>域名的配置稍后展示。</li>\n</ul>\n<hr>\n<ul>\n<li>注册<a href=\"https://www.cloudflare.com\" target=\"_blank\" rel=\"noopener\">Cloudflare</a>做CDN分发，配置SSL<br>可能需要科学上网更快点<br><img src=\"https://t1.aixinxi.net/o_1c1umvn7nd49tq0119prvcpnca.png-w.jpg\" alt=\"\"><br>所需配置稍后讲解。</li>\n</ul>\n<hr>\n<ul>\n<li>注册免费的图床<a href=\"https://www.qiniu.com\" target=\"_blank\" rel=\"noopener\">7牛</a><br><img src=\"https://t1.aixinxi.net/o_1c1un6df1lu01lkv1kvkpam12npa.png-w.jpg\" alt=\"\"><br>Markdown编辑所用。</li>\n</ul>\n<hr>\n<ul>\n<li>注册<a href=\"https://account.daocloud.io/signin\" target=\"_blank\" rel=\"noopener\">DaoVoice</a>站内及时消息<br><img src=\"https://t1.aixinxi.net/o_1c1unbgru16ek1aetu9g1noe2lba.png-w.jpg\" alt=\"\"><br>最好使用github账号登录。</li>\n</ul>\n<hr>\n<p><strong>至此现有的基本准备工作基本完成</strong>。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><blockquote>\n<p>入行有三年了，一直想拥有属于自己的博客，但我这种懒癌患者知道今天才下手。亲手配置上自己的域名，域名前绿色的小锁；高度定制的前端页面；并且我们不用担心项目的部署问题、前端静态页面的生成问题；最重要的是所有的配置需要免费（大声跟我念 <strong>qiong</strong>）。<br>网络上关于博客搭建的教程一大堆，在此仅作为我自己搭建博客的一个记录及踩过的坑；不尽详尽。ok，废话不多说，here we go。<br>现有如下的方案</p>\n<ul>\n<li><strong>Node.js</strong> (静态HTML页面生成的底层支持)</li>\n<li><strong>Git</strong> (版本管理，博客项目也需要部署到GithubPage上)</li>\n<li><strong> GithubPage</strong> (博客部署，Github免费提供1G的存储空间)</li>\n<li><strong>Hexo</strong> (快速、简洁、高效的博客框架，为Github开源框架)</li>\n<li><strong>Hexo-theme-next</strong> (博客主题插件，为Github上特别流行的开源框架)</li>\n<li><strong>阿里云域名服务</strong> (添加自己的域名)</li>\n<li><strong>Cloudflare CDN分发服务</strong> (让自己的域名支持https)</li>\n<li><strong>Hexo所支持的三方插件服务</strong> (集成站内的全文检索等功能)</li>\n<li><strong>免费的图床</strong> (如7牛)</li>\n<li><strong>DaoVoice</strong> (支持站内时时聊天)<br>此外，只要你会<strong>markdown</strong>，就可以打造属于自己的个性化的博客站点。以上所有版本在此不再一一列举，保持最新版本即可。</li>\n</ul>\n</blockquote>\n<h3 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h3><ul>\n<li>安装<a href=\"https://nodejs.org/zh-cn/\" target=\"_blank\" rel=\"noopener\">Node.js</a><br><img src=\"https://t1.aixinxi.net/o_1c1ugl7i54uvf0fkvra2l11jba.png-w.jpg\" alt=\"\"><br>点击下载安装即可(根据自己不同的操作系统选择)。</li>\n</ul>\n<hr>\n<ul>\n<li>安装<a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a><br><img src=\"https://t1.aixinxi.net/o_1c1uh6db42ou10gs1cpnbnm1fg7a.png-w.jpg\" alt=\"\"><br>选择合适的操作系统。</li>\n</ul>\n<hr>\n<ul>\n<li>配置GithubPage<br>登陆自己的Github账户，创建仓库。<br><img src=\"https://t1.aixinxi.net/o_1c1uk568c1huh10b81op4183n1m3ea.png-w.jpg\" alt=\"\"><br>其中红线部分换成你自己的Github名，此格式为固定格式不容许更改。在自己的桌面将项目clone下来，此时应该一个文件也没有(如果创建了README.md文件，hexo在执行hexo g 的时候会将此文件也生成为静态的html文件)。此时在本地创建两个分支master为默认的主分支，(部署我们的生成的静态文件使用)，创建一个分支列如hexo用来存放我们的hexo的项目。创建好分支之后与远程仓库进行关联push上去。</li>\n</ul>\n<hr>\n<ul>\n<li>安装<a href=\"https://hexo.io/zh-cn/index.html\" target=\"_blank\" rel=\"noopener\">Hexo</a><br><img src=\"https://t1.aixinxi.net/o_1c1uhgdt91ts7apf1nnk1foed37a.png-w.jpg\" alt=\"\"></li>\n</ul>\n<p>打开终端执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></p>\n<p>cd 到刚才的从github clone下来的文件夹下将git checkout 到hexo分支下，然后执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure></p>\n<p>然后执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure></p>\n<p>然后你会看到类似这样的文件内容<br><img src=\"https://t1.aixinxi.net/o_1c1uhrp9i1dmev3g5e7crdioua.png-w.jpg\" alt=\"\"><br>此时继续在终端执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure></p>\n<p>不出什么差错的话就可以在本地的4000端口上看到默认的博客站点，control+c可以停掉站点<br>默认的站点中会有一篇Hello world的文章。<br>可以先介绍一下部署的命令:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure></p>\n<p>执行此条命令之后，hexo会自动的将生成的静态html文件部署到你github项目的master分支上去；也就是会在.deploy文件中生成需要部署的静态html文件(需要配置_config.yml文件稍后讲解)；也就是说我们今后不用刻意的push项目的master分支；我们的版本控制在hexo分之下即可。我们也不用配置.gitignore文件(保持默认的忽略文件即可)。</p>\n<hr>\n<ul>\n<li>安装hexo-theme-next</li>\n</ul>\n<ol>\n<li><p>cd 到blog文件夹下的themes文件夹下执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@github.com:iissnan/hexo-theme-next.git</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>或者执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/iissnan/hexo-theme-next.git</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>第一种方式需要在本地git及github上配置SSH KEY，在此不再赘述。<br><img src=\"https://t1.aixinxi.net/o_1c1uil0ghjts1d7ovd177p78a.png-w.jpg\" alt=\"\"><br>clone完毕之后如下图</p>\n<hr>\n<p><img src=\"https://t1.aixinxi.net/o_1c1ul9kr91ce114i7ku417vcehoa.png-w.jpg\" alt=\"\"><br>我们需要在文件夹的目录下显示隐藏文件(因为有坑)；进入themes文件夹下的hexo-theme-next文件夹，将.git隐藏文件删除；如果不删除当hexo项目切换到hexo分支push的时候是不包括hexo-theme-next文件夹下的内容的(它本身也是一个git仓库)。</p>\n<hr>\n<ul>\n<li>购买<a href=\"https://cn.aliyun.com\" target=\"_blank\" rel=\"noopener\">阿里云域名服务</a><br>笔者花了15¥/年购买了自己的域名服务，国际域名的话还是实名认证比较好。<br><img src=\"https://t1.aixinxi.net/o_1c1umpavt3vv1kfp1u5o549fa.png-w.jpg\" alt=\"\"><br>域名的配置稍后展示。</li>\n</ul>\n<hr>\n<ul>\n<li>注册<a href=\"https://www.cloudflare.com\" target=\"_blank\" rel=\"noopener\">Cloudflare</a>做CDN分发，配置SSL<br>可能需要科学上网更快点<br><img src=\"https://t1.aixinxi.net/o_1c1umvn7nd49tq0119prvcpnca.png-w.jpg\" alt=\"\"><br>所需配置稍后讲解。</li>\n</ul>\n<hr>\n<ul>\n<li>注册免费的图床<a href=\"https://www.qiniu.com\" target=\"_blank\" rel=\"noopener\">7牛</a><br><img src=\"https://t1.aixinxi.net/o_1c1un6df1lu01lkv1kvkpam12npa.png-w.jpg\" alt=\"\"><br>Markdown编辑所用。</li>\n</ul>\n<hr>\n<ul>\n<li>注册<a href=\"https://account.daocloud.io/signin\" target=\"_blank\" rel=\"noopener\">DaoVoice</a>站内及时消息<br><img src=\"https://t1.aixinxi.net/o_1c1unbgru16ek1aetu9g1noe2lba.png-w.jpg\" alt=\"\"><br>最好使用github账号登录。</li>\n</ul>\n<hr>\n<p><strong>至此现有的基本准备工作基本完成</strong>。</p>\n"},{"title":"最新python面试题","date":"2018-01-05T05:15:25.000Z","_content":"\n\n## Python面试题\n> 关键在于了解Python的语言特性，结合具体的例子来理解Python的语言特性\n\n#### python的函数参数传递\n看两个例子：\n\n```\na = 1\ndef fun(a):\n  a = 2\nfun(a)\nprint a  # 1\n```\n```\na = []\ndef fun(a):\n  a.append(1)\nfun(a)\nprint a  # [1]\n```\n\n所有的变量都可以理解是内存中一个对象的“引用”，或者，也可以看成是类似于c中void*的感觉。\n上面的例子我们通过``id``来查看引用``a``的地址，来进行比较理解:\n```\na = 1\ndef fun(a):\n  print \"func_in\",id(a)   # func_in 41322472\n  a = 2\n  print \"re-point\",id(a), id(2)   # re-point 41322448 41322448\nprint \"func_out\",id(a), id(1)  # func_out 41322472 41322472\nfun(a)\nprint a  # 1\n```\n\n注：具体的id的值在不同的电脑上运行时可能有所不同，并且在Python中对较小的数字都进行了缓存。\n可以看到，在执行完``a = 2``之后，a引用中保存的值，及内存地址发生了变化，由原来的``1``对象的地址变成了``2``这个实体对象的内存地址。\n而在第2个例子``a``引用保存的内存地址就不会发生变化：\n```\na = []\ndef fun(a):\n  print \"func_in\",id(a)  # func_in 53629256\n  a.append(1)\nprint \"func_out\",id(a)     # func_out 53629256\nfun(a)\nprint a  # [1]\n```\n\n在这里需要记住的是类型是属于对象的，而不是变量的。而对象有两种，“可更改”（mutable）和“不可更改的对象”（imnutable）。在Python中，string，tuples和numbers是不可更改的对象，而list，dict，set等则是可以修改的对象。（这就是这个问题的重点）\n\n当一个引用传递给函数的时候，函数自动的复制一份引用，这个函数里的引用和外边的引用就没有半毛钱的关系了。所以第一个例子里函数把引用指向了一个不可变的对象，当函数返回的时候，外面的引用没半毛钱的感觉，而第二个例子不一样，函数内部引用指向的是可变对象，对它的操作就和定位了指针地址一样，在内存里直接的进行修改。\n\n---\n如果还不明白的话，这里有更好的解释： http://stackoverflow.com/questions/986006/how-do-i-pass-a-variable-by-reference\n#### Python中的元类\n这个就非常的不常用了，但是像在ORM这种复杂的结构中还是会需要的，详情请看：:http://stackoverflow.com/questions/100003/what-is-a-metaclass-in-python\n#### @ staticmethod和@ classmethod\nPython中其实有3个方法，及静态方法（staticmethod），类方法（classmethod）和实例方法，如下：\n```\ndef foo(x):\n  print\"executing foo(%s)\" % (x)\nclass A(object):\n  def foo(self, x):\n    print(\"executing foo(%s,%s)\" % (self, x))\n  @classmethod\n  def class_foo(cls, x):\n    print(\"executing class_foo(%s,%s)\" % (cls, x))\n  @staticmethod\n  def static_foo(x):\n    print(\"executing static_foo(%s)\" % x)\na = A()\n```\n\n这里先理解下函数参数里的self和cls。这个self和cls是对类或者实例的绑定，对于一般的函数来说我们可以这么的调用``foo(x)``，这个就是最常用的函数，它的工作跟任何的东西（类，实例）无关。对于实例方法，我们知道在类里每次定义方法的时候都需要绑定这个实例，就是``foo(self,x)``，为什么要这么做呢？因为实例方法的调用离不开实例，我们需要把实例自己传递给函数，调用的时候是这样的``a.foo(x)``（其实是``foo(a,x)``）。类方法一样，只不过它传递的是类而不是实例，``A.class_foo(x)``。注意这里的self和cls可以替换成别的参数，但是Python中的约定是这俩，还是不要改的好。\n对于静态方法其实和普通的方法一样，不需要对谁进行绑定，唯一的区别就是调用的时候需要使用``a.static_foo(x)``或者``A.static_foo(x)``来进行调用。\n下面是一张表格，来比对各种方法的可以的调用形式\n\n|\\|实例方法|类方法|静态方法|\n| :------------: | :------------: | :------------: | :------------: |\n| a = A()         | a.foo(x)        | a.class_foo(x)  | a.static_foo(x)  |\n| A | 不可用    | A.class_foo(x)  | A.static_foo(x)  |\n\n更度多的关于这个问题：\n1.http://stackoverflow.com/questions/136097/what-is-the-difference-between-staticmethod-and-classmethod-in-python\n2.https://realpython.com/blog/python/instance-class-and-static-methods-demystified/\n#### 类变量和实例变量\n##### 类变量：\n >是可在类的所有实例之间共享的值（也就是说，它们不是单独分配给每个实例的）。例如下例中，num_of_instance就是类变量，用于跟踪存在着多少个Test的实例。\n\n##### 实例变量：\n >实例化之后，每个实例单独拥有的变量\n \n ```\nclass Test(object):\n  um_of_instance = 0\n  def __init__(self, name):\n    self.name = name\n    Test.num_of_instance += 1\nif __name__ == '__main__':\n    print est.num_of_instance  # 0\n    t1 = Test('jack')\n    print est.num_of_instance  # 1\n    t2 = Test('lucy')\n    print t1.name, t1.num_of_instance  # jack 2\n    print t2.name.num_of_instance  # lucy 2\n ```\n   >补充的例子\n   \n ```\nclass Person:\n  name=\"aaa\"\np1=Person()\np2=Person()\np1.name=\"bbb\"\nprint p1.name  # bbb\nprint p2.name  # aaa\nprint Person.name  # aaa\n```\n这里的``p1.name='bbb'``是实例调用了类变量，这其实和上面的第一个问题一样，就是函数传参的问题，``p1.name``一开始是指向的类变量``name='aaa'``，但是在实例的作用域里把类变量的引用改变了，就变成了一个实例变量，self.name不再引用Person的类变量name了。\n可以看看下面的例子\n```\nclass Person:\n  name=[]\np1=Person()\np2=Person()\np1.name.append(1)\nprint p1.name  # [1]\nprint p2.name  # [1]\nprint Person.name  # [1]\n```\n参考：http://stackoverflow.com/questions/6470428/catch-multiple-exceptions-in-one-line-except-block\n#### Python的自省\n这个也是Python彪悍的特性。\n自省就是面向对象的语言所写的程序在运行时，所能知道对象的类型。简单一句就是运行时能够捕获到对象的类型。比如type()，dir()（返回当前模块的属性列表)，getattr(返回对象的属性)，setattr()（动态添加属性）这两者参考set，get方法，hasattr()（判断是否包含哪个属性），isinstance()（判断对象是否属于哪个类型）\n```\na = [1,2,3]\nb = {'a':1,'b':2,'c':3}\nc = True\nprint type(a),type(b),type(c) # <type 'list'> <type 'dict'> <type 'bool'>\nprint isinstance(a,list)  # True\n```\n#### 字典推导式\n可能你见过列表推导式，却没有见过字典推导式，在2.7中才加入的：\n```\nd = {key: value for (key, value) in iterable}\n```\n#### Python中单下划线和双下划线\n```\n>>> class MyClass():\n...     def __init__(self):\n...             self.__superprivate = \"Hello\"\n...             self._semiprivate = \", world!\"\n...\n>>> mc = MyClass()\n>>> print mc.__superprivate\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: myClass instance has no attribute '__superprivate'\n>>> print mc._semiprivate\n, world!\n>>> print mc.__dict__\n{'_MyClass__superprivate': 'Hello', '_semiprivate': ', world!'}\n```\n``__foo__``：一种约定，Python内部的名字，用来区别其他用户自定义的命名，以防冲突么就是例如：``__init__(),__del__(),__calll__()``这些的特殊的方法。\n``_foo``：一种约定，用来指定变量私有，程序员用来指定私有变量的一种方式，不能用``from module impore*``导入，其他的方面和公有一样访问。\n``__foo``：这个有真正的意义：解析器用``_classname__foo``来代替这个名字，以区别和其他类相同的命名，它无法直接像公有成员一样随便访问，通过``对象名._类名__xxx``这样的方式访问。\n详情见：http://stackoverflow.com/questions/1301346/the-meaning-of-a-single-and-a-double-underscore-before-an-object-name-in-python\n或者：http://www.zhihu.com/question/19754941\n#### 字符串格式化：%和.format\n.format在许多发面看起来会更加的便利，对于%最烦人的是它无法同时传递一个变量和元组。你可能会想下面的代码不会有什么问题：\n```\n\"hi there %s\" % name\n```\n但是，如果name恰好是(1,2,3)，那么它将会跑出一个TypeError异常，为了保证它是正常的，你必须这样做：\n```\n\"hi there %s\" % (name,)   # 提供一个单元素的数组而不是一个参数\n```\n但是有点丑..format就没有这些问题.你给的第二个问题也是这样,.format好看多了.\n你为什么不用它？\n- 不知道它（在读这个之前）\n- 为了和Python2.5兼容（譬如logging库建议使用``%``）\n\n\nhttp://stackoverflow.com/questions/5082452/python-string-formatting-vs-format\n#### 迭代器和生成器\n这个是stackoverflow里python排名第一的问题,值得一看: http://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do-in-python\n这是中文版: http://taizilongxu.gitbooks.io/stackoverflow-about-python/content/1/README.html\n这里有个关于生成器的创建问题面试官有考： 问： 将列表生成式中[]改成() 之后数据结构是否改变？ 答案：是，从列表变为生成器\n```\n>>> L = [x*x for x in range(10)]\n>>> L\n[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n>>> g = (x*x for x in range(10))\n>>> g\n<generator object <genexpr> at 0x0000028F8B774200>\n```\n通过列表生成式，可以直接创建一个列表。但是，受到内存限制，列表容量肯定是有限的。而且，创建一个包含百万元素的列表，不仅是占用很大的内存空间，如：我们只需要访问前面的几个元素，后面大部分元素所占的空间都是浪费的。因此，没有必要创建完整的列表（节省大量内存空间）。在Python中，我们可以采用生成器：边循环，边计算的机制—>generator\n#### \\*args and \\**kwargs\n用\\*args和\\**kwargs只是为了方便并没有强制使用它们。\n当你不确定你的函数里将要传递多少参数时你可以用\\**args.例如,它可以传递任意数量的参数:\n```\n>>> def print_everything(*args):\n        for count, thing in enumerate(args):\n...         print '{0}. {1}'.format(count, thing)\n...\n>>> print_everything('apple', 'banana', 'cabbage')\n0. apple\n1. banana\n2. cabbage\n```\n相似的,**kwargs允许你使用没有事先定义的参数名:\n```\n>>> def table_things(**kwargs):\n...     for name, value in kwargs.items():\n...         print '{0} = {1}'.format(name, value)\n...\n>>> table_things(apple = 'fruit', cabbage = 'vegetable')\ncabbage = vegetable\napple = fruit\n```\n你也可以混着用.命名参数首先获得参数值然后所有的其他参数都传递给\\*args和\\**kwargs.命名参数在列表的最前端.例如:\n```\ndef table_things(titlestring, **kwargs)\n```\n```\n*args和**kwargs可以同时在函数的定义中,但是*args必须在**kwargs前面.\n```\n当调用函数时你也可以用\\*和\\**语法.例如:\n```\n>>> def print_three_things(a, b, c):\n...     print 'a = {0}, b = {1}, c = {2}'.format(a,b,c)\n...\n>>> mylist = ['aardvark', 'baboon', 'cat']\n>>> print_three_things(*mylist)\n\na = aardvark, b = baboon, c = cat\n```\n就像你看到的一样,它可以传递列表(或者元组)的每一项并把它们解包.注意必须与它们在函数里的参数相吻合.当然,你也可以在函数定义或者函数调用时用\\*.\nhttp://stackoverflow.com/questions/3394835/args-and-kwargs","source":"_posts/最新Python面试题.md","raw":"---\ntitle: 最新python面试题\ndate: 2018-01-05 13:15:25\ntags: 面试题\ncategories: 面试题\n---\n\n\n## Python面试题\n> 关键在于了解Python的语言特性，结合具体的例子来理解Python的语言特性\n\n#### python的函数参数传递\n看两个例子：\n\n```\na = 1\ndef fun(a):\n  a = 2\nfun(a)\nprint a  # 1\n```\n```\na = []\ndef fun(a):\n  a.append(1)\nfun(a)\nprint a  # [1]\n```\n\n所有的变量都可以理解是内存中一个对象的“引用”，或者，也可以看成是类似于c中void*的感觉。\n上面的例子我们通过``id``来查看引用``a``的地址，来进行比较理解:\n```\na = 1\ndef fun(a):\n  print \"func_in\",id(a)   # func_in 41322472\n  a = 2\n  print \"re-point\",id(a), id(2)   # re-point 41322448 41322448\nprint \"func_out\",id(a), id(1)  # func_out 41322472 41322472\nfun(a)\nprint a  # 1\n```\n\n注：具体的id的值在不同的电脑上运行时可能有所不同，并且在Python中对较小的数字都进行了缓存。\n可以看到，在执行完``a = 2``之后，a引用中保存的值，及内存地址发生了变化，由原来的``1``对象的地址变成了``2``这个实体对象的内存地址。\n而在第2个例子``a``引用保存的内存地址就不会发生变化：\n```\na = []\ndef fun(a):\n  print \"func_in\",id(a)  # func_in 53629256\n  a.append(1)\nprint \"func_out\",id(a)     # func_out 53629256\nfun(a)\nprint a  # [1]\n```\n\n在这里需要记住的是类型是属于对象的，而不是变量的。而对象有两种，“可更改”（mutable）和“不可更改的对象”（imnutable）。在Python中，string，tuples和numbers是不可更改的对象，而list，dict，set等则是可以修改的对象。（这就是这个问题的重点）\n\n当一个引用传递给函数的时候，函数自动的复制一份引用，这个函数里的引用和外边的引用就没有半毛钱的关系了。所以第一个例子里函数把引用指向了一个不可变的对象，当函数返回的时候，外面的引用没半毛钱的感觉，而第二个例子不一样，函数内部引用指向的是可变对象，对它的操作就和定位了指针地址一样，在内存里直接的进行修改。\n\n---\n如果还不明白的话，这里有更好的解释： http://stackoverflow.com/questions/986006/how-do-i-pass-a-variable-by-reference\n#### Python中的元类\n这个就非常的不常用了，但是像在ORM这种复杂的结构中还是会需要的，详情请看：:http://stackoverflow.com/questions/100003/what-is-a-metaclass-in-python\n#### @ staticmethod和@ classmethod\nPython中其实有3个方法，及静态方法（staticmethod），类方法（classmethod）和实例方法，如下：\n```\ndef foo(x):\n  print\"executing foo(%s)\" % (x)\nclass A(object):\n  def foo(self, x):\n    print(\"executing foo(%s,%s)\" % (self, x))\n  @classmethod\n  def class_foo(cls, x):\n    print(\"executing class_foo(%s,%s)\" % (cls, x))\n  @staticmethod\n  def static_foo(x):\n    print(\"executing static_foo(%s)\" % x)\na = A()\n```\n\n这里先理解下函数参数里的self和cls。这个self和cls是对类或者实例的绑定，对于一般的函数来说我们可以这么的调用``foo(x)``，这个就是最常用的函数，它的工作跟任何的东西（类，实例）无关。对于实例方法，我们知道在类里每次定义方法的时候都需要绑定这个实例，就是``foo(self,x)``，为什么要这么做呢？因为实例方法的调用离不开实例，我们需要把实例自己传递给函数，调用的时候是这样的``a.foo(x)``（其实是``foo(a,x)``）。类方法一样，只不过它传递的是类而不是实例，``A.class_foo(x)``。注意这里的self和cls可以替换成别的参数，但是Python中的约定是这俩，还是不要改的好。\n对于静态方法其实和普通的方法一样，不需要对谁进行绑定，唯一的区别就是调用的时候需要使用``a.static_foo(x)``或者``A.static_foo(x)``来进行调用。\n下面是一张表格，来比对各种方法的可以的调用形式\n\n|\\|实例方法|类方法|静态方法|\n| :------------: | :------------: | :------------: | :------------: |\n| a = A()         | a.foo(x)        | a.class_foo(x)  | a.static_foo(x)  |\n| A | 不可用    | A.class_foo(x)  | A.static_foo(x)  |\n\n更度多的关于这个问题：\n1.http://stackoverflow.com/questions/136097/what-is-the-difference-between-staticmethod-and-classmethod-in-python\n2.https://realpython.com/blog/python/instance-class-and-static-methods-demystified/\n#### 类变量和实例变量\n##### 类变量：\n >是可在类的所有实例之间共享的值（也就是说，它们不是单独分配给每个实例的）。例如下例中，num_of_instance就是类变量，用于跟踪存在着多少个Test的实例。\n\n##### 实例变量：\n >实例化之后，每个实例单独拥有的变量\n \n ```\nclass Test(object):\n  um_of_instance = 0\n  def __init__(self, name):\n    self.name = name\n    Test.num_of_instance += 1\nif __name__ == '__main__':\n    print est.num_of_instance  # 0\n    t1 = Test('jack')\n    print est.num_of_instance  # 1\n    t2 = Test('lucy')\n    print t1.name, t1.num_of_instance  # jack 2\n    print t2.name.num_of_instance  # lucy 2\n ```\n   >补充的例子\n   \n ```\nclass Person:\n  name=\"aaa\"\np1=Person()\np2=Person()\np1.name=\"bbb\"\nprint p1.name  # bbb\nprint p2.name  # aaa\nprint Person.name  # aaa\n```\n这里的``p1.name='bbb'``是实例调用了类变量，这其实和上面的第一个问题一样，就是函数传参的问题，``p1.name``一开始是指向的类变量``name='aaa'``，但是在实例的作用域里把类变量的引用改变了，就变成了一个实例变量，self.name不再引用Person的类变量name了。\n可以看看下面的例子\n```\nclass Person:\n  name=[]\np1=Person()\np2=Person()\np1.name.append(1)\nprint p1.name  # [1]\nprint p2.name  # [1]\nprint Person.name  # [1]\n```\n参考：http://stackoverflow.com/questions/6470428/catch-multiple-exceptions-in-one-line-except-block\n#### Python的自省\n这个也是Python彪悍的特性。\n自省就是面向对象的语言所写的程序在运行时，所能知道对象的类型。简单一句就是运行时能够捕获到对象的类型。比如type()，dir()（返回当前模块的属性列表)，getattr(返回对象的属性)，setattr()（动态添加属性）这两者参考set，get方法，hasattr()（判断是否包含哪个属性），isinstance()（判断对象是否属于哪个类型）\n```\na = [1,2,3]\nb = {'a':1,'b':2,'c':3}\nc = True\nprint type(a),type(b),type(c) # <type 'list'> <type 'dict'> <type 'bool'>\nprint isinstance(a,list)  # True\n```\n#### 字典推导式\n可能你见过列表推导式，却没有见过字典推导式，在2.7中才加入的：\n```\nd = {key: value for (key, value) in iterable}\n```\n#### Python中单下划线和双下划线\n```\n>>> class MyClass():\n...     def __init__(self):\n...             self.__superprivate = \"Hello\"\n...             self._semiprivate = \", world!\"\n...\n>>> mc = MyClass()\n>>> print mc.__superprivate\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: myClass instance has no attribute '__superprivate'\n>>> print mc._semiprivate\n, world!\n>>> print mc.__dict__\n{'_MyClass__superprivate': 'Hello', '_semiprivate': ', world!'}\n```\n``__foo__``：一种约定，Python内部的名字，用来区别其他用户自定义的命名，以防冲突么就是例如：``__init__(),__del__(),__calll__()``这些的特殊的方法。\n``_foo``：一种约定，用来指定变量私有，程序员用来指定私有变量的一种方式，不能用``from module impore*``导入，其他的方面和公有一样访问。\n``__foo``：这个有真正的意义：解析器用``_classname__foo``来代替这个名字，以区别和其他类相同的命名，它无法直接像公有成员一样随便访问，通过``对象名._类名__xxx``这样的方式访问。\n详情见：http://stackoverflow.com/questions/1301346/the-meaning-of-a-single-and-a-double-underscore-before-an-object-name-in-python\n或者：http://www.zhihu.com/question/19754941\n#### 字符串格式化：%和.format\n.format在许多发面看起来会更加的便利，对于%最烦人的是它无法同时传递一个变量和元组。你可能会想下面的代码不会有什么问题：\n```\n\"hi there %s\" % name\n```\n但是，如果name恰好是(1,2,3)，那么它将会跑出一个TypeError异常，为了保证它是正常的，你必须这样做：\n```\n\"hi there %s\" % (name,)   # 提供一个单元素的数组而不是一个参数\n```\n但是有点丑..format就没有这些问题.你给的第二个问题也是这样,.format好看多了.\n你为什么不用它？\n- 不知道它（在读这个之前）\n- 为了和Python2.5兼容（譬如logging库建议使用``%``）\n\n\nhttp://stackoverflow.com/questions/5082452/python-string-formatting-vs-format\n#### 迭代器和生成器\n这个是stackoverflow里python排名第一的问题,值得一看: http://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do-in-python\n这是中文版: http://taizilongxu.gitbooks.io/stackoverflow-about-python/content/1/README.html\n这里有个关于生成器的创建问题面试官有考： 问： 将列表生成式中[]改成() 之后数据结构是否改变？ 答案：是，从列表变为生成器\n```\n>>> L = [x*x for x in range(10)]\n>>> L\n[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n>>> g = (x*x for x in range(10))\n>>> g\n<generator object <genexpr> at 0x0000028F8B774200>\n```\n通过列表生成式，可以直接创建一个列表。但是，受到内存限制，列表容量肯定是有限的。而且，创建一个包含百万元素的列表，不仅是占用很大的内存空间，如：我们只需要访问前面的几个元素，后面大部分元素所占的空间都是浪费的。因此，没有必要创建完整的列表（节省大量内存空间）。在Python中，我们可以采用生成器：边循环，边计算的机制—>generator\n#### \\*args and \\**kwargs\n用\\*args和\\**kwargs只是为了方便并没有强制使用它们。\n当你不确定你的函数里将要传递多少参数时你可以用\\**args.例如,它可以传递任意数量的参数:\n```\n>>> def print_everything(*args):\n        for count, thing in enumerate(args):\n...         print '{0}. {1}'.format(count, thing)\n...\n>>> print_everything('apple', 'banana', 'cabbage')\n0. apple\n1. banana\n2. cabbage\n```\n相似的,**kwargs允许你使用没有事先定义的参数名:\n```\n>>> def table_things(**kwargs):\n...     for name, value in kwargs.items():\n...         print '{0} = {1}'.format(name, value)\n...\n>>> table_things(apple = 'fruit', cabbage = 'vegetable')\ncabbage = vegetable\napple = fruit\n```\n你也可以混着用.命名参数首先获得参数值然后所有的其他参数都传递给\\*args和\\**kwargs.命名参数在列表的最前端.例如:\n```\ndef table_things(titlestring, **kwargs)\n```\n```\n*args和**kwargs可以同时在函数的定义中,但是*args必须在**kwargs前面.\n```\n当调用函数时你也可以用\\*和\\**语法.例如:\n```\n>>> def print_three_things(a, b, c):\n...     print 'a = {0}, b = {1}, c = {2}'.format(a,b,c)\n...\n>>> mylist = ['aardvark', 'baboon', 'cat']\n>>> print_three_things(*mylist)\n\na = aardvark, b = baboon, c = cat\n```\n就像你看到的一样,它可以传递列表(或者元组)的每一项并把它们解包.注意必须与它们在函数里的参数相吻合.当然,你也可以在函数定义或者函数调用时用\\*.\nhttp://stackoverflow.com/questions/3394835/args-and-kwargs","slug":"最新Python面试题","published":1,"updated":"2018-01-08T10:30:34.186Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjc73syu100024kw0xpq0jlos","content":"<h2 id=\"Python面试题\"><a href=\"#Python面试题\" class=\"headerlink\" title=\"Python面试题\"></a>Python面试题</h2><blockquote>\n<p>关键在于了解Python的语言特性，结合具体的例子来理解Python的语言特性</p>\n</blockquote>\n<h4 id=\"python的函数参数传递\"><a href=\"#python的函数参数传递\" class=\"headerlink\" title=\"python的函数参数传递\"></a>python的函数参数传递</h4><p>看两个例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = 1</span><br><span class=\"line\">def fun(a):</span><br><span class=\"line\">  a = 2</span><br><span class=\"line\">fun(a)</span><br><span class=\"line\">print a  # 1</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = []</span><br><span class=\"line\">def fun(a):</span><br><span class=\"line\">  a.append(1)</span><br><span class=\"line\">fun(a)</span><br><span class=\"line\">print a  # [1]</span><br></pre></td></tr></table></figure>\n<p>所有的变量都可以理解是内存中一个对象的“引用”，或者，也可以看成是类似于c中void*的感觉。<br>上面的例子我们通过<code>id</code>来查看引用<code>a</code>的地址，来进行比较理解:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = 1</span><br><span class=\"line\">def fun(a):</span><br><span class=\"line\">  print &quot;func_in&quot;,id(a)   # func_in 41322472</span><br><span class=\"line\">  a = 2</span><br><span class=\"line\">  print &quot;re-point&quot;,id(a), id(2)   # re-point 41322448 41322448</span><br><span class=\"line\">print &quot;func_out&quot;,id(a), id(1)  # func_out 41322472 41322472</span><br><span class=\"line\">fun(a)</span><br><span class=\"line\">print a  # 1</span><br></pre></td></tr></table></figure></p>\n<p>注：具体的id的值在不同的电脑上运行时可能有所不同，并且在Python中对较小的数字都进行了缓存。<br>可以看到，在执行完<code>a = 2</code>之后，a引用中保存的值，及内存地址发生了变化，由原来的<code>1</code>对象的地址变成了<code>2</code>这个实体对象的内存地址。<br>而在第2个例子<code>a</code>引用保存的内存地址就不会发生变化：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = []</span><br><span class=\"line\">def fun(a):</span><br><span class=\"line\">  print &quot;func_in&quot;,id(a)  # func_in 53629256</span><br><span class=\"line\">  a.append(1)</span><br><span class=\"line\">print &quot;func_out&quot;,id(a)     # func_out 53629256</span><br><span class=\"line\">fun(a)</span><br><span class=\"line\">print a  # [1]</span><br></pre></td></tr></table></figure></p>\n<p>在这里需要记住的是类型是属于对象的，而不是变量的。而对象有两种，“可更改”（mutable）和“不可更改的对象”（imnutable）。在Python中，string，tuples和numbers是不可更改的对象，而list，dict，set等则是可以修改的对象。（这就是这个问题的重点）</p>\n<p>当一个引用传递给函数的时候，函数自动的复制一份引用，这个函数里的引用和外边的引用就没有半毛钱的关系了。所以第一个例子里函数把引用指向了一个不可变的对象，当函数返回的时候，外面的引用没半毛钱的感觉，而第二个例子不一样，函数内部引用指向的是可变对象，对它的操作就和定位了指针地址一样，在内存里直接的进行修改。</p>\n<hr>\n<p>如果还不明白的话，这里有更好的解释： <a href=\"http://stackoverflow.com/questions/986006/how-do-i-pass-a-variable-by-reference\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/986006/how-do-i-pass-a-variable-by-reference</a></p>\n<h4 id=\"Python中的元类\"><a href=\"#Python中的元类\" class=\"headerlink\" title=\"Python中的元类\"></a>Python中的元类</h4><p>这个就非常的不常用了，但是像在ORM这种复杂的结构中还是会需要的，详情请看：:<a href=\"http://stackoverflow.com/questions/100003/what-is-a-metaclass-in-python\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/100003/what-is-a-metaclass-in-python</a></p>\n<h4 id=\"staticmethod和-classmethod\"><a href=\"#staticmethod和-classmethod\" class=\"headerlink\" title=\"@ staticmethod和@ classmethod\"></a>@ staticmethod和@ classmethod</h4><p>Python中其实有3个方法，及静态方法（staticmethod），类方法（classmethod）和实例方法，如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def foo(x):</span><br><span class=\"line\">  print&quot;executing foo(%s)&quot; % (x)</span><br><span class=\"line\">class A(object):</span><br><span class=\"line\">  def foo(self, x):</span><br><span class=\"line\">    print(&quot;executing foo(%s,%s)&quot; % (self, x))</span><br><span class=\"line\">  @classmethod</span><br><span class=\"line\">  def class_foo(cls, x):</span><br><span class=\"line\">    print(&quot;executing class_foo(%s,%s)&quot; % (cls, x))</span><br><span class=\"line\">  @staticmethod</span><br><span class=\"line\">  def static_foo(x):</span><br><span class=\"line\">    print(&quot;executing static_foo(%s)&quot; % x)</span><br><span class=\"line\">a = A()</span><br></pre></td></tr></table></figure></p>\n<p>这里先理解下函数参数里的self和cls。这个self和cls是对类或者实例的绑定，对于一般的函数来说我们可以这么的调用<code>foo(x)</code>，这个就是最常用的函数，它的工作跟任何的东西（类，实例）无关。对于实例方法，我们知道在类里每次定义方法的时候都需要绑定这个实例，就是<code>foo(self,x)</code>，为什么要这么做呢？因为实例方法的调用离不开实例，我们需要把实例自己传递给函数，调用的时候是这样的<code>a.foo(x)</code>（其实是<code>foo(a,x)</code>）。类方法一样，只不过它传递的是类而不是实例，<code>A.class_foo(x)</code>。注意这里的self和cls可以替换成别的参数，但是Python中的约定是这俩，还是不要改的好。<br>对于静态方法其实和普通的方法一样，不需要对谁进行绑定，唯一的区别就是调用的时候需要使用<code>a.static_foo(x)</code>或者<code>A.static_foo(x)</code>来进行调用。<br>下面是一张表格，来比对各种方法的可以的调用形式</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">\\</th>\n<th style=\"text-align:center\">实例方法</th>\n<th style=\"text-align:center\">类方法</th>\n<th style=\"text-align:center\">静态方法</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">a = A()</td>\n<td style=\"text-align:center\">a.foo(x)</td>\n<td style=\"text-align:center\">a.class_foo(x)</td>\n<td style=\"text-align:center\">a.static_foo(x)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">A</td>\n<td style=\"text-align:center\">不可用</td>\n<td style=\"text-align:center\">A.class_foo(x)</td>\n<td style=\"text-align:center\">A.static_foo(x)</td>\n</tr>\n</tbody>\n</table>\n<p>更度多的关于这个问题：<br>1.<a href=\"http://stackoverflow.com/questions/136097/what-is-the-difference-between-staticmethod-and-classmethod-in-python\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/136097/what-is-the-difference-between-staticmethod-and-classmethod-in-python</a><br>2.<a href=\"https://realpython.com/blog/python/instance-class-and-static-methods-demystified/\" target=\"_blank\" rel=\"noopener\">https://realpython.com/blog/python/instance-class-and-static-methods-demystified/</a></p>\n<h4 id=\"类变量和实例变量\"><a href=\"#类变量和实例变量\" class=\"headerlink\" title=\"类变量和实例变量\"></a>类变量和实例变量</h4><h5 id=\"类变量：\"><a href=\"#类变量：\" class=\"headerlink\" title=\"类变量：\"></a>类变量：</h5><blockquote>\n<p>是可在类的所有实例之间共享的值（也就是说，它们不是单独分配给每个实例的）。例如下例中，num_of_instance就是类变量，用于跟踪存在着多少个Test的实例。</p>\n</blockquote>\n<h5 id=\"实例变量：\"><a href=\"#实例变量：\" class=\"headerlink\" title=\"实例变量：\"></a>实例变量：</h5><blockquote>\n<p>实例化之后，每个实例单独拥有的变量</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Test(object):</span><br><span class=\"line\">  um_of_instance = 0</span><br><span class=\"line\">  def __init__(self, name):</span><br><span class=\"line\">    self.name = name</span><br><span class=\"line\">    Test.num_of_instance += 1</span><br><span class=\"line\">if __name__ == &apos;__main__&apos;:</span><br><span class=\"line\">    print est.num_of_instance  # 0</span><br><span class=\"line\">    t1 = Test(&apos;jack&apos;)</span><br><span class=\"line\">    print est.num_of_instance  # 1</span><br><span class=\"line\">    t2 = Test(&apos;lucy&apos;)</span><br><span class=\"line\">    print t1.name, t1.num_of_instance  # jack 2</span><br><span class=\"line\">    print t2.name.num_of_instance  # lucy 2</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>补充的例子</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Person:</span><br><span class=\"line\">  name=&quot;aaa&quot;</span><br><span class=\"line\">p1=Person()</span><br><span class=\"line\">p2=Person()</span><br><span class=\"line\">p1.name=&quot;bbb&quot;</span><br><span class=\"line\">print p1.name  # bbb</span><br><span class=\"line\">print p2.name  # aaa</span><br><span class=\"line\">print Person.name  # aaa</span><br></pre></td></tr></table></figure>\n<p>这里的<code>p1.name=&#39;bbb&#39;</code>是实例调用了类变量，这其实和上面的第一个问题一样，就是函数传参的问题，<code>p1.name</code>一开始是指向的类变量<code>name=&#39;aaa&#39;</code>，但是在实例的作用域里把类变量的引用改变了，就变成了一个实例变量，self.name不再引用Person的类变量name了。<br>可以看看下面的例子<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Person:</span><br><span class=\"line\">  name=[]</span><br><span class=\"line\">p1=Person()</span><br><span class=\"line\">p2=Person()</span><br><span class=\"line\">p1.name.append(1)</span><br><span class=\"line\">print p1.name  # [1]</span><br><span class=\"line\">print p2.name  # [1]</span><br><span class=\"line\">print Person.name  # [1]</span><br></pre></td></tr></table></figure></p>\n<p>参考：<a href=\"http://stackoverflow.com/questions/6470428/catch-multiple-exceptions-in-one-line-except-block\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/6470428/catch-multiple-exceptions-in-one-line-except-block</a></p>\n<h4 id=\"Python的自省\"><a href=\"#Python的自省\" class=\"headerlink\" title=\"Python的自省\"></a>Python的自省</h4><p>这个也是Python彪悍的特性。<br>自省就是面向对象的语言所写的程序在运行时，所能知道对象的类型。简单一句就是运行时能够捕获到对象的类型。比如type()，dir()（返回当前模块的属性列表)，getattr(返回对象的属性)，setattr()（动态添加属性）这两者参考set，get方法，hasattr()（判断是否包含哪个属性），isinstance()（判断对象是否属于哪个类型）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [1,2,3]</span><br><span class=\"line\">b = &#123;&apos;a&apos;:1,&apos;b&apos;:2,&apos;c&apos;:3&#125;</span><br><span class=\"line\">c = True</span><br><span class=\"line\">print type(a),type(b),type(c) # &lt;type &apos;list&apos;&gt; &lt;type &apos;dict&apos;&gt; &lt;type &apos;bool&apos;&gt;</span><br><span class=\"line\">print isinstance(a,list)  # True</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"字典推导式\"><a href=\"#字典推导式\" class=\"headerlink\" title=\"字典推导式\"></a>字典推导式</h4><p>可能你见过列表推导式，却没有见过字典推导式，在2.7中才加入的：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d = &#123;key: value for (key, value) in iterable&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"Python中单下划线和双下划线\"><a href=\"#Python中单下划线和双下划线\" class=\"headerlink\" title=\"Python中单下划线和双下划线\"></a>Python中单下划线和双下划线</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; class MyClass():</span><br><span class=\"line\">...     def __init__(self):</span><br><span class=\"line\">...             self.__superprivate = &quot;Hello&quot;</span><br><span class=\"line\">...             self._semiprivate = &quot;, world!&quot;</span><br><span class=\"line\">...</span><br><span class=\"line\">&gt;&gt;&gt; mc = MyClass()</span><br><span class=\"line\">&gt;&gt;&gt; print mc.__superprivate</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class=\"line\">AttributeError: myClass instance has no attribute &apos;__superprivate&apos;</span><br><span class=\"line\">&gt;&gt;&gt; print mc._semiprivate</span><br><span class=\"line\">, world!</span><br><span class=\"line\">&gt;&gt;&gt; print mc.__dict__</span><br><span class=\"line\">&#123;&apos;_MyClass__superprivate&apos;: &apos;Hello&apos;, &apos;_semiprivate&apos;: &apos;, world!&apos;&#125;</span><br></pre></td></tr></table></figure>\n<p><code>__foo__</code>：一种约定，Python内部的名字，用来区别其他用户自定义的命名，以防冲突么就是例如：<code>__init__(),__del__(),__calll__()</code>这些的特殊的方法。<br><code>_foo</code>：一种约定，用来指定变量私有，程序员用来指定私有变量的一种方式，不能用<code>from module impore*</code>导入，其他的方面和公有一样访问。<br><code>__foo</code>：这个有真正的意义：解析器用<code>_classname__foo</code>来代替这个名字，以区别和其他类相同的命名，它无法直接像公有成员一样随便访问，通过<code>对象名._类名__xxx</code>这样的方式访问。<br>详情见：<a href=\"http://stackoverflow.com/questions/1301346/the-meaning-of-a-single-and-a-double-underscore-before-an-object-name-in-python\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/1301346/the-meaning-of-a-single-and-a-double-underscore-before-an-object-name-in-python</a><br>或者：<a href=\"http://www.zhihu.com/question/19754941\" target=\"_blank\" rel=\"noopener\">http://www.zhihu.com/question/19754941</a></p>\n<h4 id=\"字符串格式化：-和-format\"><a href=\"#字符串格式化：-和-format\" class=\"headerlink\" title=\"字符串格式化：%和.format\"></a>字符串格式化：%和.format</h4><p>.format在许多发面看起来会更加的便利，对于%最烦人的是它无法同时传递一个变量和元组。你可能会想下面的代码不会有什么问题：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;hi there %s&quot; % name</span><br></pre></td></tr></table></figure></p>\n<p>但是，如果name恰好是(1,2,3)，那么它将会跑出一个TypeError异常，为了保证它是正常的，你必须这样做：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;hi there %s&quot; % (name,)   # 提供一个单元素的数组而不是一个参数</span><br></pre></td></tr></table></figure></p>\n<p>但是有点丑..format就没有这些问题.你给的第二个问题也是这样,.format好看多了.<br>你为什么不用它？</p>\n<ul>\n<li>不知道它（在读这个之前）</li>\n<li>为了和Python2.5兼容（譬如logging库建议使用<code>%</code>）</li>\n</ul>\n<p><a href=\"http://stackoverflow.com/questions/5082452/python-string-formatting-vs-format\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/5082452/python-string-formatting-vs-format</a></p>\n<h4 id=\"迭代器和生成器\"><a href=\"#迭代器和生成器\" class=\"headerlink\" title=\"迭代器和生成器\"></a>迭代器和生成器</h4><p>这个是stackoverflow里python排名第一的问题,值得一看: <a href=\"http://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do-in-python\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do-in-python</a><br>这是中文版: <a href=\"http://taizilongxu.gitbooks.io/stackoverflow-about-python/content/1/README.html\" target=\"_blank\" rel=\"noopener\">http://taizilongxu.gitbooks.io/stackoverflow-about-python/content/1/README.html</a><br>这里有个关于生成器的创建问题面试官有考： 问： 将列表生成式中[]改成() 之后数据结构是否改变？ 答案：是，从列表变为生成器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; L = [x*x for x in range(10)]</span><br><span class=\"line\">&gt;&gt;&gt; L</span><br><span class=\"line\">[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]</span><br><span class=\"line\">&gt;&gt;&gt; g = (x*x for x in range(10))</span><br><span class=\"line\">&gt;&gt;&gt; g</span><br><span class=\"line\">&lt;generator object &lt;genexpr&gt; at 0x0000028F8B774200&gt;</span><br></pre></td></tr></table></figure></p>\n<p>通过列表生成式，可以直接创建一个列表。但是，受到内存限制，列表容量肯定是有限的。而且，创建一个包含百万元素的列表，不仅是占用很大的内存空间，如：我们只需要访问前面的几个元素，后面大部分元素所占的空间都是浪费的。因此，没有必要创建完整的列表（节省大量内存空间）。在Python中，我们可以采用生成器：边循环，边计算的机制—&gt;generator</p>\n<h4 id=\"args-and-kwargs\"><a href=\"#args-and-kwargs\" class=\"headerlink\" title=\"*args and **kwargs\"></a>*args and **kwargs</h4><p>用*args和*<em>kwargs只是为了方便并没有强制使用它们。<br>当你不确定你的函数里将要传递多少参数时你可以用*</em>args.例如,它可以传递任意数量的参数:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; def print_everything(*args):</span><br><span class=\"line\">        for count, thing in enumerate(args):</span><br><span class=\"line\">...         print &apos;&#123;0&#125;. &#123;1&#125;&apos;.format(count, thing)</span><br><span class=\"line\">...</span><br><span class=\"line\">&gt;&gt;&gt; print_everything(&apos;apple&apos;, &apos;banana&apos;, &apos;cabbage&apos;)</span><br><span class=\"line\">0. apple</span><br><span class=\"line\">1. banana</span><br><span class=\"line\">2. cabbage</span><br></pre></td></tr></table></figure></p>\n<p>相似的,**kwargs允许你使用没有事先定义的参数名:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; def table_things(**kwargs):</span><br><span class=\"line\">...     for name, value in kwargs.items():</span><br><span class=\"line\">...         print &apos;&#123;0&#125; = &#123;1&#125;&apos;.format(name, value)</span><br><span class=\"line\">...</span><br><span class=\"line\">&gt;&gt;&gt; table_things(apple = &apos;fruit&apos;, cabbage = &apos;vegetable&apos;)</span><br><span class=\"line\">cabbage = vegetable</span><br><span class=\"line\">apple = fruit</span><br></pre></td></tr></table></figure></p>\n<p>你也可以混着用.命名参数首先获得参数值然后所有的其他参数都传递给*args和**kwargs.命名参数在列表的最前端.例如:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def table_things(titlestring, **kwargs)</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*args和**kwargs可以同时在函数的定义中,但是*args必须在**kwargs前面.</span><br></pre></td></tr></table></figure>\n<p>当调用函数时你也可以用*和**语法.例如:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; def print_three_things(a, b, c):</span><br><span class=\"line\">...     print &apos;a = &#123;0&#125;, b = &#123;1&#125;, c = &#123;2&#125;&apos;.format(a,b,c)</span><br><span class=\"line\">...</span><br><span class=\"line\">&gt;&gt;&gt; mylist = [&apos;aardvark&apos;, &apos;baboon&apos;, &apos;cat&apos;]</span><br><span class=\"line\">&gt;&gt;&gt; print_three_things(*mylist)</span><br><span class=\"line\"></span><br><span class=\"line\">a = aardvark, b = baboon, c = cat</span><br></pre></td></tr></table></figure></p>\n<p>就像你看到的一样,它可以传递列表(或者元组)的每一项并把它们解包.注意必须与它们在函数里的参数相吻合.当然,你也可以在函数定义或者函数调用时用*.<br><a href=\"http://stackoverflow.com/questions/3394835/args-and-kwargs\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/3394835/args-and-kwargs</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Python面试题\"><a href=\"#Python面试题\" class=\"headerlink\" title=\"Python面试题\"></a>Python面试题</h2><blockquote>\n<p>关键在于了解Python的语言特性，结合具体的例子来理解Python的语言特性</p>\n</blockquote>\n<h4 id=\"python的函数参数传递\"><a href=\"#python的函数参数传递\" class=\"headerlink\" title=\"python的函数参数传递\"></a>python的函数参数传递</h4><p>看两个例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = 1</span><br><span class=\"line\">def fun(a):</span><br><span class=\"line\">  a = 2</span><br><span class=\"line\">fun(a)</span><br><span class=\"line\">print a  # 1</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = []</span><br><span class=\"line\">def fun(a):</span><br><span class=\"line\">  a.append(1)</span><br><span class=\"line\">fun(a)</span><br><span class=\"line\">print a  # [1]</span><br></pre></td></tr></table></figure>\n<p>所有的变量都可以理解是内存中一个对象的“引用”，或者，也可以看成是类似于c中void*的感觉。<br>上面的例子我们通过<code>id</code>来查看引用<code>a</code>的地址，来进行比较理解:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = 1</span><br><span class=\"line\">def fun(a):</span><br><span class=\"line\">  print &quot;func_in&quot;,id(a)   # func_in 41322472</span><br><span class=\"line\">  a = 2</span><br><span class=\"line\">  print &quot;re-point&quot;,id(a), id(2)   # re-point 41322448 41322448</span><br><span class=\"line\">print &quot;func_out&quot;,id(a), id(1)  # func_out 41322472 41322472</span><br><span class=\"line\">fun(a)</span><br><span class=\"line\">print a  # 1</span><br></pre></td></tr></table></figure></p>\n<p>注：具体的id的值在不同的电脑上运行时可能有所不同，并且在Python中对较小的数字都进行了缓存。<br>可以看到，在执行完<code>a = 2</code>之后，a引用中保存的值，及内存地址发生了变化，由原来的<code>1</code>对象的地址变成了<code>2</code>这个实体对象的内存地址。<br>而在第2个例子<code>a</code>引用保存的内存地址就不会发生变化：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = []</span><br><span class=\"line\">def fun(a):</span><br><span class=\"line\">  print &quot;func_in&quot;,id(a)  # func_in 53629256</span><br><span class=\"line\">  a.append(1)</span><br><span class=\"line\">print &quot;func_out&quot;,id(a)     # func_out 53629256</span><br><span class=\"line\">fun(a)</span><br><span class=\"line\">print a  # [1]</span><br></pre></td></tr></table></figure></p>\n<p>在这里需要记住的是类型是属于对象的，而不是变量的。而对象有两种，“可更改”（mutable）和“不可更改的对象”（imnutable）。在Python中，string，tuples和numbers是不可更改的对象，而list，dict，set等则是可以修改的对象。（这就是这个问题的重点）</p>\n<p>当一个引用传递给函数的时候，函数自动的复制一份引用，这个函数里的引用和外边的引用就没有半毛钱的关系了。所以第一个例子里函数把引用指向了一个不可变的对象，当函数返回的时候，外面的引用没半毛钱的感觉，而第二个例子不一样，函数内部引用指向的是可变对象，对它的操作就和定位了指针地址一样，在内存里直接的进行修改。</p>\n<hr>\n<p>如果还不明白的话，这里有更好的解释： <a href=\"http://stackoverflow.com/questions/986006/how-do-i-pass-a-variable-by-reference\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/986006/how-do-i-pass-a-variable-by-reference</a></p>\n<h4 id=\"Python中的元类\"><a href=\"#Python中的元类\" class=\"headerlink\" title=\"Python中的元类\"></a>Python中的元类</h4><p>这个就非常的不常用了，但是像在ORM这种复杂的结构中还是会需要的，详情请看：:<a href=\"http://stackoverflow.com/questions/100003/what-is-a-metaclass-in-python\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/100003/what-is-a-metaclass-in-python</a></p>\n<h4 id=\"staticmethod和-classmethod\"><a href=\"#staticmethod和-classmethod\" class=\"headerlink\" title=\"@ staticmethod和@ classmethod\"></a>@ staticmethod和@ classmethod</h4><p>Python中其实有3个方法，及静态方法（staticmethod），类方法（classmethod）和实例方法，如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def foo(x):</span><br><span class=\"line\">  print&quot;executing foo(%s)&quot; % (x)</span><br><span class=\"line\">class A(object):</span><br><span class=\"line\">  def foo(self, x):</span><br><span class=\"line\">    print(&quot;executing foo(%s,%s)&quot; % (self, x))</span><br><span class=\"line\">  @classmethod</span><br><span class=\"line\">  def class_foo(cls, x):</span><br><span class=\"line\">    print(&quot;executing class_foo(%s,%s)&quot; % (cls, x))</span><br><span class=\"line\">  @staticmethod</span><br><span class=\"line\">  def static_foo(x):</span><br><span class=\"line\">    print(&quot;executing static_foo(%s)&quot; % x)</span><br><span class=\"line\">a = A()</span><br></pre></td></tr></table></figure></p>\n<p>这里先理解下函数参数里的self和cls。这个self和cls是对类或者实例的绑定，对于一般的函数来说我们可以这么的调用<code>foo(x)</code>，这个就是最常用的函数，它的工作跟任何的东西（类，实例）无关。对于实例方法，我们知道在类里每次定义方法的时候都需要绑定这个实例，就是<code>foo(self,x)</code>，为什么要这么做呢？因为实例方法的调用离不开实例，我们需要把实例自己传递给函数，调用的时候是这样的<code>a.foo(x)</code>（其实是<code>foo(a,x)</code>）。类方法一样，只不过它传递的是类而不是实例，<code>A.class_foo(x)</code>。注意这里的self和cls可以替换成别的参数，但是Python中的约定是这俩，还是不要改的好。<br>对于静态方法其实和普通的方法一样，不需要对谁进行绑定，唯一的区别就是调用的时候需要使用<code>a.static_foo(x)</code>或者<code>A.static_foo(x)</code>来进行调用。<br>下面是一张表格，来比对各种方法的可以的调用形式</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">\\</th>\n<th style=\"text-align:center\">实例方法</th>\n<th style=\"text-align:center\">类方法</th>\n<th style=\"text-align:center\">静态方法</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">a = A()</td>\n<td style=\"text-align:center\">a.foo(x)</td>\n<td style=\"text-align:center\">a.class_foo(x)</td>\n<td style=\"text-align:center\">a.static_foo(x)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">A</td>\n<td style=\"text-align:center\">不可用</td>\n<td style=\"text-align:center\">A.class_foo(x)</td>\n<td style=\"text-align:center\">A.static_foo(x)</td>\n</tr>\n</tbody>\n</table>\n<p>更度多的关于这个问题：<br>1.<a href=\"http://stackoverflow.com/questions/136097/what-is-the-difference-between-staticmethod-and-classmethod-in-python\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/136097/what-is-the-difference-between-staticmethod-and-classmethod-in-python</a><br>2.<a href=\"https://realpython.com/blog/python/instance-class-and-static-methods-demystified/\" target=\"_blank\" rel=\"noopener\">https://realpython.com/blog/python/instance-class-and-static-methods-demystified/</a></p>\n<h4 id=\"类变量和实例变量\"><a href=\"#类变量和实例变量\" class=\"headerlink\" title=\"类变量和实例变量\"></a>类变量和实例变量</h4><h5 id=\"类变量：\"><a href=\"#类变量：\" class=\"headerlink\" title=\"类变量：\"></a>类变量：</h5><blockquote>\n<p>是可在类的所有实例之间共享的值（也就是说，它们不是单独分配给每个实例的）。例如下例中，num_of_instance就是类变量，用于跟踪存在着多少个Test的实例。</p>\n</blockquote>\n<h5 id=\"实例变量：\"><a href=\"#实例变量：\" class=\"headerlink\" title=\"实例变量：\"></a>实例变量：</h5><blockquote>\n<p>实例化之后，每个实例单独拥有的变量</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Test(object):</span><br><span class=\"line\">  um_of_instance = 0</span><br><span class=\"line\">  def __init__(self, name):</span><br><span class=\"line\">    self.name = name</span><br><span class=\"line\">    Test.num_of_instance += 1</span><br><span class=\"line\">if __name__ == &apos;__main__&apos;:</span><br><span class=\"line\">    print est.num_of_instance  # 0</span><br><span class=\"line\">    t1 = Test(&apos;jack&apos;)</span><br><span class=\"line\">    print est.num_of_instance  # 1</span><br><span class=\"line\">    t2 = Test(&apos;lucy&apos;)</span><br><span class=\"line\">    print t1.name, t1.num_of_instance  # jack 2</span><br><span class=\"line\">    print t2.name.num_of_instance  # lucy 2</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>补充的例子</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Person:</span><br><span class=\"line\">  name=&quot;aaa&quot;</span><br><span class=\"line\">p1=Person()</span><br><span class=\"line\">p2=Person()</span><br><span class=\"line\">p1.name=&quot;bbb&quot;</span><br><span class=\"line\">print p1.name  # bbb</span><br><span class=\"line\">print p2.name  # aaa</span><br><span class=\"line\">print Person.name  # aaa</span><br></pre></td></tr></table></figure>\n<p>这里的<code>p1.name=&#39;bbb&#39;</code>是实例调用了类变量，这其实和上面的第一个问题一样，就是函数传参的问题，<code>p1.name</code>一开始是指向的类变量<code>name=&#39;aaa&#39;</code>，但是在实例的作用域里把类变量的引用改变了，就变成了一个实例变量，self.name不再引用Person的类变量name了。<br>可以看看下面的例子<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Person:</span><br><span class=\"line\">  name=[]</span><br><span class=\"line\">p1=Person()</span><br><span class=\"line\">p2=Person()</span><br><span class=\"line\">p1.name.append(1)</span><br><span class=\"line\">print p1.name  # [1]</span><br><span class=\"line\">print p2.name  # [1]</span><br><span class=\"line\">print Person.name  # [1]</span><br></pre></td></tr></table></figure></p>\n<p>参考：<a href=\"http://stackoverflow.com/questions/6470428/catch-multiple-exceptions-in-one-line-except-block\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/6470428/catch-multiple-exceptions-in-one-line-except-block</a></p>\n<h4 id=\"Python的自省\"><a href=\"#Python的自省\" class=\"headerlink\" title=\"Python的自省\"></a>Python的自省</h4><p>这个也是Python彪悍的特性。<br>自省就是面向对象的语言所写的程序在运行时，所能知道对象的类型。简单一句就是运行时能够捕获到对象的类型。比如type()，dir()（返回当前模块的属性列表)，getattr(返回对象的属性)，setattr()（动态添加属性）这两者参考set，get方法，hasattr()（判断是否包含哪个属性），isinstance()（判断对象是否属于哪个类型）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [1,2,3]</span><br><span class=\"line\">b = &#123;&apos;a&apos;:1,&apos;b&apos;:2,&apos;c&apos;:3&#125;</span><br><span class=\"line\">c = True</span><br><span class=\"line\">print type(a),type(b),type(c) # &lt;type &apos;list&apos;&gt; &lt;type &apos;dict&apos;&gt; &lt;type &apos;bool&apos;&gt;</span><br><span class=\"line\">print isinstance(a,list)  # True</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"字典推导式\"><a href=\"#字典推导式\" class=\"headerlink\" title=\"字典推导式\"></a>字典推导式</h4><p>可能你见过列表推导式，却没有见过字典推导式，在2.7中才加入的：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d = &#123;key: value for (key, value) in iterable&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"Python中单下划线和双下划线\"><a href=\"#Python中单下划线和双下划线\" class=\"headerlink\" title=\"Python中单下划线和双下划线\"></a>Python中单下划线和双下划线</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; class MyClass():</span><br><span class=\"line\">...     def __init__(self):</span><br><span class=\"line\">...             self.__superprivate = &quot;Hello&quot;</span><br><span class=\"line\">...             self._semiprivate = &quot;, world!&quot;</span><br><span class=\"line\">...</span><br><span class=\"line\">&gt;&gt;&gt; mc = MyClass()</span><br><span class=\"line\">&gt;&gt;&gt; print mc.__superprivate</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class=\"line\">AttributeError: myClass instance has no attribute &apos;__superprivate&apos;</span><br><span class=\"line\">&gt;&gt;&gt; print mc._semiprivate</span><br><span class=\"line\">, world!</span><br><span class=\"line\">&gt;&gt;&gt; print mc.__dict__</span><br><span class=\"line\">&#123;&apos;_MyClass__superprivate&apos;: &apos;Hello&apos;, &apos;_semiprivate&apos;: &apos;, world!&apos;&#125;</span><br></pre></td></tr></table></figure>\n<p><code>__foo__</code>：一种约定，Python内部的名字，用来区别其他用户自定义的命名，以防冲突么就是例如：<code>__init__(),__del__(),__calll__()</code>这些的特殊的方法。<br><code>_foo</code>：一种约定，用来指定变量私有，程序员用来指定私有变量的一种方式，不能用<code>from module impore*</code>导入，其他的方面和公有一样访问。<br><code>__foo</code>：这个有真正的意义：解析器用<code>_classname__foo</code>来代替这个名字，以区别和其他类相同的命名，它无法直接像公有成员一样随便访问，通过<code>对象名._类名__xxx</code>这样的方式访问。<br>详情见：<a href=\"http://stackoverflow.com/questions/1301346/the-meaning-of-a-single-and-a-double-underscore-before-an-object-name-in-python\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/1301346/the-meaning-of-a-single-and-a-double-underscore-before-an-object-name-in-python</a><br>或者：<a href=\"http://www.zhihu.com/question/19754941\" target=\"_blank\" rel=\"noopener\">http://www.zhihu.com/question/19754941</a></p>\n<h4 id=\"字符串格式化：-和-format\"><a href=\"#字符串格式化：-和-format\" class=\"headerlink\" title=\"字符串格式化：%和.format\"></a>字符串格式化：%和.format</h4><p>.format在许多发面看起来会更加的便利，对于%最烦人的是它无法同时传递一个变量和元组。你可能会想下面的代码不会有什么问题：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;hi there %s&quot; % name</span><br></pre></td></tr></table></figure></p>\n<p>但是，如果name恰好是(1,2,3)，那么它将会跑出一个TypeError异常，为了保证它是正常的，你必须这样做：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;hi there %s&quot; % (name,)   # 提供一个单元素的数组而不是一个参数</span><br></pre></td></tr></table></figure></p>\n<p>但是有点丑..format就没有这些问题.你给的第二个问题也是这样,.format好看多了.<br>你为什么不用它？</p>\n<ul>\n<li>不知道它（在读这个之前）</li>\n<li>为了和Python2.5兼容（譬如logging库建议使用<code>%</code>）</li>\n</ul>\n<p><a href=\"http://stackoverflow.com/questions/5082452/python-string-formatting-vs-format\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/5082452/python-string-formatting-vs-format</a></p>\n<h4 id=\"迭代器和生成器\"><a href=\"#迭代器和生成器\" class=\"headerlink\" title=\"迭代器和生成器\"></a>迭代器和生成器</h4><p>这个是stackoverflow里python排名第一的问题,值得一看: <a href=\"http://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do-in-python\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do-in-python</a><br>这是中文版: <a href=\"http://taizilongxu.gitbooks.io/stackoverflow-about-python/content/1/README.html\" target=\"_blank\" rel=\"noopener\">http://taizilongxu.gitbooks.io/stackoverflow-about-python/content/1/README.html</a><br>这里有个关于生成器的创建问题面试官有考： 问： 将列表生成式中[]改成() 之后数据结构是否改变？ 答案：是，从列表变为生成器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; L = [x*x for x in range(10)]</span><br><span class=\"line\">&gt;&gt;&gt; L</span><br><span class=\"line\">[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]</span><br><span class=\"line\">&gt;&gt;&gt; g = (x*x for x in range(10))</span><br><span class=\"line\">&gt;&gt;&gt; g</span><br><span class=\"line\">&lt;generator object &lt;genexpr&gt; at 0x0000028F8B774200&gt;</span><br></pre></td></tr></table></figure></p>\n<p>通过列表生成式，可以直接创建一个列表。但是，受到内存限制，列表容量肯定是有限的。而且，创建一个包含百万元素的列表，不仅是占用很大的内存空间，如：我们只需要访问前面的几个元素，后面大部分元素所占的空间都是浪费的。因此，没有必要创建完整的列表（节省大量内存空间）。在Python中，我们可以采用生成器：边循环，边计算的机制—&gt;generator</p>\n<h4 id=\"args-and-kwargs\"><a href=\"#args-and-kwargs\" class=\"headerlink\" title=\"*args and **kwargs\"></a>*args and **kwargs</h4><p>用*args和*<em>kwargs只是为了方便并没有强制使用它们。<br>当你不确定你的函数里将要传递多少参数时你可以用*</em>args.例如,它可以传递任意数量的参数:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; def print_everything(*args):</span><br><span class=\"line\">        for count, thing in enumerate(args):</span><br><span class=\"line\">...         print &apos;&#123;0&#125;. &#123;1&#125;&apos;.format(count, thing)</span><br><span class=\"line\">...</span><br><span class=\"line\">&gt;&gt;&gt; print_everything(&apos;apple&apos;, &apos;banana&apos;, &apos;cabbage&apos;)</span><br><span class=\"line\">0. apple</span><br><span class=\"line\">1. banana</span><br><span class=\"line\">2. cabbage</span><br></pre></td></tr></table></figure></p>\n<p>相似的,**kwargs允许你使用没有事先定义的参数名:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; def table_things(**kwargs):</span><br><span class=\"line\">...     for name, value in kwargs.items():</span><br><span class=\"line\">...         print &apos;&#123;0&#125; = &#123;1&#125;&apos;.format(name, value)</span><br><span class=\"line\">...</span><br><span class=\"line\">&gt;&gt;&gt; table_things(apple = &apos;fruit&apos;, cabbage = &apos;vegetable&apos;)</span><br><span class=\"line\">cabbage = vegetable</span><br><span class=\"line\">apple = fruit</span><br></pre></td></tr></table></figure></p>\n<p>你也可以混着用.命名参数首先获得参数值然后所有的其他参数都传递给*args和**kwargs.命名参数在列表的最前端.例如:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def table_things(titlestring, **kwargs)</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*args和**kwargs可以同时在函数的定义中,但是*args必须在**kwargs前面.</span><br></pre></td></tr></table></figure>\n<p>当调用函数时你也可以用*和**语法.例如:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; def print_three_things(a, b, c):</span><br><span class=\"line\">...     print &apos;a = &#123;0&#125;, b = &#123;1&#125;, c = &#123;2&#125;&apos;.format(a,b,c)</span><br><span class=\"line\">...</span><br><span class=\"line\">&gt;&gt;&gt; mylist = [&apos;aardvark&apos;, &apos;baboon&apos;, &apos;cat&apos;]</span><br><span class=\"line\">&gt;&gt;&gt; print_three_things(*mylist)</span><br><span class=\"line\"></span><br><span class=\"line\">a = aardvark, b = baboon, c = cat</span><br></pre></td></tr></table></figure></p>\n<p>就像你看到的一样,它可以传递列表(或者元组)的每一项并把它们解包.注意必须与它们在函数里的参数相吻合.当然,你也可以在函数定义或者函数调用时用*.<br><a href=\"http://stackoverflow.com/questions/3394835/args-and-kwargs\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/3394835/args-and-kwargs</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjc73syto00004kw01w5v0ul4","category_id":"cjc73syu500044kw0bbhazace","_id":"cjc73syuj000a4kw0bjrxcu0n"},{"post_id":"cjc73syu100024kw0xpq0jlos","category_id":"cjc73syug00074kw05fzntcex","_id":"cjc73syuk000c4kw0g3m6ybd0"}],"PostTag":[{"post_id":"cjc73syto00004kw01w5v0ul4","tag_id":"cjc73syua00054kw0dsqqlpol","_id":"cjc73syui00094kw0239hl546"},{"post_id":"cjc73syu100024kw0xpq0jlos","tag_id":"cjc73syuh00084kw0oe3p2rye","_id":"cjc73syuk000b4kw0vqstgpmk"}],"Tag":[{"name":"Hexo","_id":"cjc73syua00054kw0dsqqlpol"},{"name":"面试题","_id":"cjc73syuh00084kw0oe3p2rye"}]}}